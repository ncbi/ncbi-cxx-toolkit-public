#  $Id$
###############################################################################


#============================================================================
# Build tree configuration

[Configure]

#----------------------------------------------------------------------------
# Location of 3rd party libraries and applications
# Macros used here should be defined either in this section, or in [msvcNNN]
ThirdPartyBasePath     = \\\\snowman\\win-coremake\\Lib\\ThirdParty
ThirdPartyAppsBasePath = \\\\snowman\\win-coremake\\App\\ThirdParty
ThirdPartyVDBBasePath  = \\\\snowman\\trace_software
SWIG_PATH              = \\\\ncbipc0204\\swig

XCode_ThirdPartyBasePath = /netopt/ncbi_tools
XCode_ThirdPartyVDBBasePath = /net/snowman/vol/projects/trace_software
#XCode_DefaultLibsInc     = /sw/include
XCode_UserInc            = /usr/include

#----------------------------------------------------------------------------
# Location of NCBI C toolkit
# Macros used here should be defined either in this section, or in [msvcNNN]
ThirdParty_C_ncbi = \\\\snowman\\win-coremake\\Lib\\Ncbi\\C\\$(msvc_3rd)\\c.current

#----------------------------------------------------------------------------
# Location of custom code generators
CustomCodeGenerator.proto = \\\\snowman\\win-coremake\\Lib\\ThirdParty\\grpc\\$(msvc_3rd)\\1.50.2-ncbi1\\bin\\ReleaseDLL
XCode_CustomCodeGenerator.proto = /netopt/ncbi_tools/grpc-1.50.2-ncbi1/Release/bin

#----------------------------------------------------------------------------
# Project makefile can have a list of requirements ('REQUIRES')
# If any one of these requirements is unrecognized by project tree builder (PTB)
# such a requirement is considered as not met, and the project is excluded from the build

# The following requirement are always met
ProvidedRequests = CXX_Toolkit \
                   LocalBZ2  \
                   LocalPCRE \
                   LocalZ    \
                   LocalLMDB \
                   MT

# These requiremenst are also met
# Unlike 'ProvidedRequests', this list is also used when generating
# features_and_packages.txt file
StandardFeatures = MSWin MSVC DBLib FreeTDS algo app dbapi gui objects serial connext -Cygwin

# The following requirement are never met
# If the same entry is present both in 'ProvidedRequests' and 'NotProvidedRequests'
# the latter one takes precedence (prohibition is more important than permission)
NotProvidedRequests = unix       \
                      XCODE      \
                      GCC        \
                      KCC        \
                      ICC        \
                      VisualAge  \
                      CompaqCompiler \
                      WorkShop   \
                      MIPSpro    \
                      LimitedLinker \
                      MaxDebug   \
                      LFS        \
                      LocalSSS   \
                      SSSUTILS   \
                      MESA       \
                      GEO        \
                      SSSDB      \
                      SP         \
                      LIBMAGIC   \
                      CURL

# The following requirement are configurable
# Each macro on the list has the section with the same name in this file
ConfigurableRequests = in-house-resources full-test-data PSGLoader

# Whether the following requirements are met or not is up to user
# One must use GUI tool to enable them
UserRequests = Ncbi-int8-gi Ncbi-JNI Ncbi-Unicode

#----------------------------------------------------------------------------
# This file will be generated during the configuration process
ExtraDefines = ncbi_random_macro.h
RandomValueCount = 10

#----------------------------------------------------------------------------
# This file will be generated during the configuration process
# It contains build information, like SC-conponent, SVN version and etc.
BuildVerPath = common/ncbi_build_ver.h

#----------------------------------------------------------------------------
# This file will be generated during the configuration process
# It contains macro definitions, which describe the availability
# of 3rd party libraries
DefinesPath = common\\config\\ncbiconf_msvc_site.h

# The following macros will be defined, or undefined
Defines     = HAVE_BERKELEY_DB \
              HAVE_BDB         \
              HAVE_BDB_CACHE   \
              HAVE_BOOST_TEST  \
              HAVE_BOOST_SPIRIT \
              HAVE_ICU         \
              HAVE_INFLUXDB \
              HAVE_FCGX_ACCEPT_R \
              HAVE_FREETYPE    \
              HAVE_LIBFTGL     \
              HAVE_LIBCONNEXT  \
              HAVE_LIBFASTCGI  \
              HAVE_LIBGIF      \
              HAVE_LIBGL2PS    \
              HAVE_LIBGLEW     \
              HAVE_LIBGNUTLS   \
              HAVE_LIBJPEG     \
              HAVE_LIBLZO      \
              HAVE_LIBZSTD     \
              HAVE_LIBLMDB     \
              HAVE_LIBMIMETIC  \
              HAVE_LIBMUPARSER \
              HAVE_LIBNGHTTP2  \
              HAVE_LIBOPENSSL  \
              HAVE_LIBPNG      \
              HAVE_LIBTIFF     \
              HAVE_LIBSQLITE3  \
              HAVE_LIBSYBASE   \
              HAVE_LIBXML      \
              HAVE_LIBXSLT     \
              HAVE_LIBEXSLT    \
              HAVE_LIBMONGODB  \
              HAVE_LIBMONGODB3 \
              HAVE_LIBUV       \
              HAVE_LIBPROTOBUF \
              HAVE_LIBGRPC     \
              HAVE_LIBNCBICRYPT  \
              HAVE_NCBI_VDB    \
              HAVE_ODBC        \
              HAVE_ODBCSS_H    \
              HAVE_OPENGL      \
              HAVE_PUBSEQ_OS   \
              HAVE_PYTHON      \
              HAVE_SWIG        \
              HAVE_XALAN       \
              HAVE_XERCES      \
              USE_LOCAL_ZLIB   \
              USE_LOCAL_BZLIB  \
              USE_LOCAL_PCRE   \
              HAVE_SQLITE3ASYNC_H \
              HAVE_SQLITE3_UNLOCK_NOTIFY \
              NCBI_JNI         \
              NCBI_INT8_GI \
              HAVE_PSG_LOADER \
              HAVE_LOCAL_NCBI_BUILD_VER_H


#----------------------------------------------------------------------------
# The definition of the following macros used in project makefiles
# depends on availability of Components
# Each macro on the list has the section with the same name in this file
Macros = BDB_LIB BDB_CACHE_LIB SQLITE3_WRAPPER CONNEXT XCONNEXT \
         ncbi_xreader_pubseqos ncbi_xreader_pubseqos2 UNLESS_PUBSEQOS \
         FASTCGI_OBJS DBAPI_DRIVER DBAPI_CTLIB \
         DBAPI_ODBC ncbi_java VDB_REQ bamread sraread \
         ncbi_id2proc_snp ncbi_id2proc_wgs ncbi_xloader_bam \
         ncbi_xloader_csra ncbi_xloader_snp ncbi_xloader_sra \
         ncbi_xloader_vdbgraph ncbi_xloader_wgs \
         GL2PS_OPT PROTOBUF_OPT GRPC_OPT

#----------------------------------------------------------------------------
# Some 3rd party libraries have analog in the toolkit.
# Depending on the availability of 3rd party library,
# the toolkit will use either external or internal one
# See section in this file with the name of the latter entry in each pair
LibChoices = z/Z bz2/BZ2 lzo/LZO zstandard/ZSTANDARD regexp/PCRE2 lmdb/LMDB
ComponentChoices = LocalZ/Z LocalBZ2/BZ2 LocalPCRE/PCRE2 LocalLMDB/LMDB

#----------------------------------------------------------------------------
# Some toolkit applications require 3rd party DLLs
# To make things easier, we copy these DLLs into our 'bin' folders

# This suffix is used when generating Makefile.third_party.mk,
# which is used in 3rd party libraries installation projects -
# third_party_static_install.vcproj and third_party_dll_install.vcproj
ThirdPartyLibsBinPathSuffix = _BINPATH

# Location of 'bin' directory of 3rd party libraries
# The 'bin' folder is at $(LIBPATH)\$(ThirdPartyLibsBinSubDir)
ThirdPartyLibsBinSubDir     = ..\\..\\bin

# 3rd party libraries to install
ThirdPartyLibsToInstall     = BerkeleyDB \
                              GLEW       \
                              libxml     \
                              libxslt    \
                              libexslt   \
                              LIBUV      \
                              LZO        \
                              MSSQL      \
                              NGHTTP2    \
                              OpenSSL    \
                              PYTHON     \
                              SQLITE3    \
                              Sybase     \
                              Xalan      \
                              Xerces     \
                              wxWidgets  \
                              VDB


#----------------------------------------------------------------------------
# Macros
# Macros used here should be defined either in this section, or in compiler specific section.

ThirdParty_SQLServer = C:\\Program Files\\Microsoft SQL Server\\Client SDK\\ODBC\\180\\SDK
ThirdParty_VDB       = $(ThirdPartyVDBBasePath)\\vdb\\vdb-versions\\3.2.1
PYTHON_PATH          = $(ThirdPartyAppsBasePath)\\Python_3.11\\


#============================================================================
# Source tree configuration

[ProjectTree]

# File with metadata used to resolve macros in project makefiles
MetaData        = build-system/Makefile.mk.in
CustomMetaData  = Makefile.*.mk
CustomConfH     = ncbiconf.*.h
CustomConfiguration = project_tree_builder.ini.custom

# All subdirectories of these ones will be excluded by default
ImplicitExclude =

# Names of source tree folders
include         = include
src             = src
dll             = dll
compilers       = compilers
projects        = scripts\\projects
impl            = impl

# File with this name must be present in all subdirectories of src
# It describes what to do in the current directory,
# and what subdirectories to process
TreeNode        = Makefile.in

# List of registered (allowed and prohibited) project tags
# Each project makefile can have 'PROJ_TAG' entry
# All tags present in the project tree MUST be described in 'ProjectTags' file
ProjectTags     = src\\build-system\\project_tags.txt

# List of library dependencies
DepGraph = src/build-system/library_relations.txt


#============================================================================
# MSVC specific data

[msvc]

# File extension of MSVC specific makefile information
# For example: Makefile.<project_name>.lib.msvc
MakefilesExt   = msvc

# Name of the 'build' subdirectory
Projects       = build

# MSVC specific metadata
# It describes default settings of compiler, linker etc
MetaMakefile   = build-system\\Makefile.mk.in.msvc


#----------------------------------------------------------------------------
# Settings for MSVC 2019 (v.16, x64)

[msvc1600.x64]
Version=12.00\n# Visual Studio Version 16
# Build configurations
Configurations = DebugDLL,DebugMT,ReleaseDLL,ReleaseMT
DllConfigurations = DebugDLL ReleaseDLL
DllBuildDefine    = NCBI_DLL_BUILD
# Name of a subdirectory of 'compilers'
msvc_prj       = vs2019
# Macro
msvc_3rd       = vs2019.64
vdb_arch       = x86_64/v142
vdb_arch_inc   = x86_64

# 3rd party libs

ThirdParty_BerkeleyDB   = $(ThirdPartyBasePath)\\berkeleydb\\vs2019.64\\5.3.28-ncbi1
ThirdParty_Boost        = $(ThirdPartyBasePath)\\boost\\vs2019.64\\1.76.0-ncbi1
ThirdParty_BZ2          = $(ThirdPartyBasePath)\\bzip2\\vs2019.64\\1.0.8
ThirdParty_fastcgi      = $(ThirdPartyBasePath)\\fastcgi\\vs2019.64\\2.4.1
ThirdParty_FreeType     = $(ThirdPartyBasePath)\\freetype\\vs2019.64\\2.4.10
ThirdParty_FTGL         = $(ThirdPartyBasePath)\\ftgl\\vs2019.64\\2.1.3-rc5
ThirdParty_GIF          = $(ThirdPartyBasePath)\\gif\\vs2019.64\\4.1.3
ThirdParty_GL2PS        = $(ThirdPartyBasePath)\\gl2ps\\vs2019.64\\1.4.0
ThirdParty_GLEW         = $(ThirdPartyBasePath)\\glew\\vs2019.64\\1.5.8
ThirdParty_GNUTLS       = $(ThirdPartyBasePath)\\gnutls\\vs2019.64\\3.4.9
ThirdParty_GRPC         = $(ThirdPartyBasePath)\\grpc\\vs2019.64\\1.50.2-ncbi1
ThirdParty_INFLUXDB     = $(ThirdPartyBasePath)\\influxdb\\vs2019.64\\20190426
###ThirdParty_ICU          = $(ThirdPartyBasePath)\\icu\\vs2019.64\\3.2
ThirdParty_JDK          = $(ThirdPartyBasePath)\\jdk\\1.6.0_25
ThirdParty_JPEG         = $(ThirdPartyBasePath)\\jpeg\\vs2019.64\\9c
ThirdParty_LMDB         = $(ThirdPartyBasePath)\\lmdb\\vs2019.64\\0.9.24
ThirdParty_LZO          = $(ThirdPartyBasePath)\\lzo\\vs2019.64\\2.10
ThirdParty_Mimetic      = $(ThirdPartyBasePath)\\mimetic\\vs2019.64\\0.9.8
#ThirdParty_MongoDB      = $(ThirdPartyBasePath)\\mongodb\\vs2019.64\\legacy_1.0.0-rc0
#ThirdParty_MongoDB3     = $(ThirdPartyBasePath)\\mongodb\\vs2019.64\\3.1.2
#ThirdParty_MSSQL        = $(ThirdPartyBasePath)\\MSSQL\\vs2019.64\\8.0.1.94
#ThirdParty_muParser     = $(ThirdPartyBasePath)\\muparser\\vs2019.64\\1.30
ThirdParty_ncbicrypt    = $(ThirdPartyBasePath)\\ncbicrypt\\vs2019.64\\20230516
ThirdParty_NGHTTP2      = $(ThirdPartyBasePath)\\nghttp2\\vs2019.64\\1.40.0
ThirdParty_OpenSSL      = $(ThirdPartyBasePath)\\openssl\\vs2019.64\\3.3.1
ThirdParty_PCRE         = $(ThirdPartyBasePath)\\pcre\\vs2019.64\\8.42
ThirdParty_PCRE2        = $(ThirdPartyBasePath)\\pcre2\\vs2019.64\\10.44
ThirdParty_PNG          = $(ThirdPartyBasePath)\\png\\vs2019.64\\1.6.34
ThirdParty_SQLITE3      = $(ThirdPartyBasePath)\\sqlite\\vs2019.64\\3.26.0
ThirdParty_Sybase       = $(ThirdPartyBasePath)\\sybase\\vs2019.64\\15.5
ThirdParty_TIFF         = $(ThirdPartyBasePath)\\tiff\\vs2019.64\\3.6.1
ThirdParty_UV           = $(ThirdPartyBasePath)\\uv\\vs2019.64\\1.35.0.ncbi1
ThirdParty_wxWidgets    = $(ThirdPartyBasePath)\\wxwidgets\\vs2019.64\\3.2.1-ncbi1
ThirdParty_Xalan        = $(ThirdPartyBasePath)\\xalan\\vs2019.64\\1.12
ThirdParty_Xerces       = $(ThirdPartyBasePath)\\xerces\\vs2019.64\\3.2.3
ThirdParty_XML          = $(ThirdPartyBasePath)\\xml\\vs2019.64\\2.7.8
ThirdParty_XSLT         = $(ThirdPartyBasePath)\\xslt\\vs2019.64\\1.1.26
ThirdParty_Z            = $(ThirdPartyBasePath)\\z\\vs2019.64\\1.2.11
ThirdParty_ZSTD         = $(ThirdPartyBasePath)\\zstd\\vs2019.64\\1.5.2


#----------------------------------------------------------------------------
# Settings for MSVC 2022 (v.17, x64)

[msvc1700.x64]
Version=12.00\n# Visual Studio Version 17
# Build configurations
Configurations = DebugDLL,DebugMT,ReleaseDLL,ReleaseMT
DllConfigurations = DebugDLL ReleaseDLL
DllBuildDefine    = NCBI_DLL_BUILD
# Name of a subdirectory of 'compilers'
msvc_prj       = vs2022
# Macro
msvc_3rd       = vs2022.64
vdb_arch       = x86_64/v143
vdb_arch_inc   = x86_64

# 3rd party libs

ThirdParty_BerkeleyDB   = $(ThirdPartyBasePath)\\berkeleydb\\vs2022.64\\5.3.28-ncbi1
ThirdParty_Boost        = $(ThirdPartyBasePath)\\boost\\vs2022.64\\1.85.0
ThirdParty_BZ2          = $(ThirdPartyBasePath)\\bzip2\\vs2022.64\\1.0.8
ThirdParty_fastcgi      = $(ThirdPartyBasePath)\\fastcgi\\vs2022.64\\2.4.1
ThirdParty_FreeType     = $(ThirdPartyBasePath)\\freetype\\vs2022.64\\2.4.10
ThirdParty_FTGL         = $(ThirdPartyBasePath)\\ftgl\\vs2022.64\\2.1.3-rc5
ThirdParty_GIF          = $(ThirdPartyBasePath)\\gif\\vs2022.64\\4.1.3
ThirdParty_GL2PS        = $(ThirdPartyBasePath)\\gl2ps\\vs2022.64\\1.4.0
ThirdParty_GLEW         = $(ThirdPartyBasePath)\\glew\\vs2022.64\\1.5.8
ThirdParty_GNUTLS       = $(ThirdPartyBasePath)\\gnutls\\vs2022.64\\3.4.9
ThirdParty_GRPC         = $(ThirdPartyBasePath)\\grpc\\vs2022.64\\1.50.2-ncbi1
ThirdParty_INFLUXDB     = $(ThirdPartyBasePath)\\influxdb\\vs2022.64\\20190426
ThirdParty_JDK          = $(ThirdPartyBasePath)\\jdk\\1.6.0_25
ThirdParty_JPEG         = $(ThirdPartyBasePath)\\jpeg\\vs2022.64\\9c
ThirdParty_LMDB         = $(ThirdPartyBasePath)\\lmdb\\vs2022.64\\0.9.24
ThirdParty_LZO          = $(ThirdPartyBasePath)\\lzo\\vs2022.64\\2.10
ThirdParty_Mimetic      = $(ThirdPartyBasePath)\\mimetic\\vs2022.64\\0.9.8
ThirdParty_ncbicrypt    = $(ThirdPartyBasePath)\\ncbicrypt\\vs2022.64\\20230516
ThirdParty_NGHTTP2      = $(ThirdPartyBasePath)\\nghttp2\\vs2022.64\\1.40.0
ThirdParty_OpenSSL      = $(ThirdPartyBasePath)\\openssl\\vs2022.64\\3.3.1
ThirdParty_PCRE         = $(ThirdPartyBasePath)\\pcre\\vs2022.64\\8.42
ThirdParty_PCRE2        = $(ThirdPartyBasePath)\\pcre2\\vs2022.64\\10.44
ThirdParty_PNG          = $(ThirdPartyBasePath)\\png\\vs2022.64\\1.6.34
ThirdParty_SQLITE3      = $(ThirdPartyBasePath)\\sqlite\\vs2022.64\\3.26.0
ThirdParty_Sybase       = $(ThirdPartyBasePath)\\sybase\\vs2022.64\\15.5
ThirdParty_TIFF         = $(ThirdPartyBasePath)\\tiff\\vs2022.64\\3.6.1
ThirdParty_UV           = $(ThirdPartyBasePath)\\uv\\vs2022.64\\1.48.0
ThirdParty_wxWidgets    = $(ThirdPartyBasePath)\\wxwidgets\\vs2022.64\\3.2.1-ncbi1
ThirdParty_Xalan        = $(ThirdPartyBasePath)\\xalan\\vs2022.64\\1.12
ThirdParty_Xerces       = $(ThirdPartyBasePath)\\xerces\\vs2022.64\\3.2.3
ThirdParty_XML          = $(ThirdPartyBasePath)\\xml\\vs2022.64\\2.7.8
ThirdParty_XSLT         = $(ThirdPartyBasePath)\\xslt\\vs2022.64\\1.1.26
ThirdParty_Z            = $(ThirdPartyBasePath)\\z\\vs2022.64\\1.2.12
ThirdParty_ZSTD         = $(ThirdPartyBasePath)\\zstd\\vs2022.64\\1.5.2


#============================================================================
# Settings for UNIX platforms

[unix]
Configurations = Debug,DebugDLL,DebugMT,Release,ReleaseDLL,ReleaseMT
DllConfigurations = DebugDLL ReleaseDLL
DllBuildDefine    = NCBI_DLL_BUILD
# File with resolved macros in project makefiles
# generated by configure script on Unix only
MetaData        = Makefile.mk
TopBuilddir     = Makefile.top_builddir

#============================================================================
# Settings for XCODE (MacOS)

[PlatformSynonyms_Darwin]
arch = i386,i486,i586:i686
os = Darwin:darwin

[xcode]
# File extension of XCODE specific makefile information
# For example: Makefile.<project_name>.lib.xcode
MakefilesExt   = xcode

# Name of the 'build' subdirectory
Projects       = build

# XCODE specific metadata
# It describes default settings of compiler, linker etc
MetaMakefile   = build-system/Makefile.mk.in.xcode
StandardFeatures = unix Darwin XCODE GCC LFS algo app dbapi gui objects serial FreeTDS LAPACK
NotProvidedRequests = MSWin MSVC KCC ICC VisualAge CompaqCompiler WorkShop MIPSpro -LimitedLinker MaxDebug LocalSSS SSSUTILS MESA GEO SSSDB SP ODBC LIBMAGIC GIF
DefinesPath = common/config/ncbiconf_xcode_site.h


ThirdParty_BerkeleyDB = $(XCode_ThirdPartyBasePath)/BerkeleyDB-5.3.28-ncbi1
ThirdParty_Boost      = $(XCode_ThirdPartyBasePath)/boost-1.76.0-ncbi1
ThirdParty_JPEG       = $(XCode_ThirdPartyBasePath)/safe-sw
ThirdParty_PNG        = /opt/X11
ThirdParty_TIFF       = $(XCode_ThirdPartyBasePath)/safe-sw
ThirdParty_LZO        = $(XCode_ThirdPartyBasePath)/lzo-2.05
ThirdParty_SQLITE3    = $(XCode_ThirdPartyBasePath)/sqlite-3.26.0-ncbi1
ThirdParty_GLEW       = $(XCode_ThirdPartyBasePath)/glew-1.5.8
ThirdParty_GL2PS      = $(XCode_ThirdPartyBasePath)/gl2ps-1.4.0
ThirdParty_wxWidgets  = $(XCode_ThirdPartyBasePath)/wxWidgets-3.2.1-ncbi1
ThirdParty_FreeType   = /opt/X11
ThirdParty_FTGL       = $(XCode_ThirdPartyBasePath)/ftgl-2.1.3-rc5
ThirdParty_VDB        = $(XCode_ThirdPartyVDBBasePath)/vdb/vdb-versions/3.2.1
ThirdParty_GMP        = $(Xcode_ThirdPartyBasePath)/gmp-6.3.0
ThirdParty_Nettle     = $(Xcode_ThirdPartyBasePath)/nettle-3.1.1
ThirdParty_GNUTLS     = $(Xcode_ThirdPartyBasePath)/gnutls-3.4.0
ThirdParty_LMDB       = $(Xcode_ThirdPartyBasePath)/lmdb-0.9.24
ThirdParty_GRPC       = $(Xcode_ThirdPartyBasePath)/grpc-1.50.2-ncbi1
ThirdParty_NGHTTP2    = $(Xcode_ThirdPartyBasePath)/nghttp2-1.40.0
ThirdParty_UV         = $(Xcode_ThirdPartyBasePath)/libuv-1.44.2
ThirdParty_ncbicrypt  = $(Xcode_ThirdPartyBasePath)/ncbicrypt-20230516
ThirdParty_ZSTD       = $(Xcode_ThirdPartyBasePath)/zstd-1.5.2

# LIBXML_INCLUDE   = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/libxml2
FREETYPE_INCLUDE = $(ThirdParty_FreeType)/include/freetype2 $(ThirdParty_FreeType)/include
OBJCXX_CXXFLAGS  = -x objective-c++
FOUNDATION_LIBS  = -framework Foundation

[xcode30]
Version=44
Configurations = DebugDLL,DebugMT,ReleaseDLL,ReleaseMT
DllConfigurations = DebugDLL ReleaseDLL
DllBuildDefine    = NCBI_DLL_BUILD
msvc_prj       = xcode30_prj
# vdb_arch       = i386
vdb_arch       = fat86
vdb_arch_inc   = fat86

[xcode30.x86_64]
Version=44
Configurations = DebugDLL,DebugMT,ReleaseDLL,ReleaseMT
DllConfigurations = DebugDLL ReleaseDLL
DllBuildDefine    = NCBI_DLL_BUILD
msvc_prj       = xcode30_prj
sfx64 = 64
vdb_arch       = x86_64
vdb_arch_inc   = x86_64
x86_only       =

[xcode30.i386_x86_64]
Version=44
Configurations = DebugDLL,DebugMT,ReleaseDLL,ReleaseMT
DllConfigurations = DebugDLL ReleaseDLL
DllBuildDefine    = NCBI_DLL_BUILD
msvc_prj       = xcode30_prj
vdb_arch       = fat86
vdb_arch_inc   = fat86
x86_only       =

[xcode30.arm64]
Version=44
Configurations = DebugDLL,DebugMT,ReleaseDLL,ReleaseMT
DllConfigurations = DebugDLL ReleaseDLL
DllBuildDefine    = NCBI_DLL_BUILD
msvc_prj       = xcode30_prj
sfx64 = 64
vdb_arch       = arm64
vdb_arch_inc   = arm64
x86_only       = /x86_only


#============================================================================
# Additional include directories for LibChoices

[LibChoicesIncludes]
CMPRS_INCLUDE = z   util/compress/zlib/    \
                bz2 util/compress/bzip2/   \
                lzo . \
                zstandard .

BZ2_INCLUDE = bz2 util/compress/bzip2/
LZO_INCLUDE = lzo .
Z_INCLUDE = z util/compress/zlib/
ZSTD_INCLUDE = zstandard .

PCRE_INCLUDE = regexp util/regexp/
LMDB_INCLUDE = lmdb util/lmdb/ util/lmdbxx/



#============================================================================
# Defines for CPPFLAGS and other macros in project makefiles
# Macros used here should be defined either in [Configure], or in compiler specific section.
# Predefined macros: incdir, rootdir

[Defines]
# Additional include directory
NCBI_C_INCLUDE = $(ThirdParty_C_ncbi)\\include

# Additional libraries
NCBI_C_ncbi      = blast ddvlib medarch ncbi ncbiacc ncbicdr   \
                   ncbicn3d ncbicn3d_ogl ncbidesk ncbiid1      \
                   ncbimain ncbimmdb ncbinacc ncbiobj ncbispel \
                   ncbitool ncbitxc2 netblast netcli netentr   \
                   regexp smartnet vibgif vibnet vibrant       \
                   vibrant_ogl
BZ2_LIB          = bz2
LZO_LIB          = lzo
Z_LIB            = z
ZSTD_LIB         = zstandard
PCRE_LIB         = regexp
LMDB_LIB         = lmdb

FTDS100_INCLUDE   = dbapi/driver/ftds100/ dbapi/driver/ftds100/freetds/
FTDS100_LIB       = ct_ftds100 tds_ftds100
FTDS100_CTLIB_LIB = ct_ftds100 tds_ftds100

FTDS14_INCLUDE   = dbapi/driver/ftds14/ dbapi/driver/ftds14/freetds/
FTDS14_LIB       = ct_ftds14 tds_ftds14
FTDS14_CTLIB_LIB = ct_ftds14 tds_ftds14

FTDS_INCLUDE     = dbapi/driver/ftds14/ dbapi/driver/ftds14/freetds/
FTDS_LIB         = ct_ftds14 tds_ftds14
FTDS_LIBS        =

FASTCGI_INCLUDE  = $(ThirdParty_fastcgi)/include
FREETYPE_INCLUDE = $(ThirdParty_FreeType)/include
FTGL_INCLUDE     = $(ThirdParty_FTGL)/include
GLEW_INCLUDE     = $(ThirdParty_GLEW)/include
GL2PS_INCLUDE    = $(ThirdParty_GL2PS)/include
GNUTLS_INCLUDE   = $(ThirdParty_GNUTLS)/include
INFLUXDB_INCLUDE = $(ThirdParty_INFLUXDB)/include
LIBUV_INCLUDE    = $(ThirdParty_UV)/include
LIBXML_INCLUDE   = $(ThirdParty_XML)/include
LIBXSLT_INCLUDE  = $(ThirdParty_XSLT)/include
LIBEXSLT_INCLUDE = $(ThirdParty_XSLT)/include
MBEDTLS_INCLUDE  =
NGHTTP2_INCLUDE  = $(ThirdParty_NGHTTP2)/include
OPENSSL_INCLUDE  = $(ThirdParty_OpenSSL)/include
TLS_INCLUDE      = $(ThirdParty_GNUTLS)/include

SYBASE_PATH      = $(ThirdParty_Sybase)/Sybase

NCBICRYPT_INCLUDE = $(ThirdParty_ncbicrypt)/include
NCBI_SSS_INCLUDE  = $(incdir)/sss

top_srcdir = $(rootdir)
build_root = $:?<
STATIC =
DLL    =


#============================================================================
# Build configuration settings:
[Debug]
debug                  = TRUE
runtimeLibraryOption   = 5

[DebugDLL]
debug=TRUE
runtimeLibraryOption=3

[DebugMT]
debug=TRUE
runtimeLibraryOption=1

[Release]
debug=FALSE
runtimeLibraryOption=4

[ReleaseDLL]
debug=FALSE
runtimeLibraryOption=2

[ReleaseMT]
debug=FALSE
runtimeLibraryOption=0


#============================================================================
# Definitions of these macros (section names) depend on availability of Components

[NETWORK_LIBS]
Component=NETWORK, NCBICRYPT

[NETWORK]

[NETWORK.xcode]
LIB = -lresolv

[NETWORK_PURE_LIBS]
Component=NETWORK, NCBICRYPT

[LIBS]
Component=

[NCBI_C_LIBS]
Component=C_ncbi

[C-Toolkit]
Component=C_ncbi

[HAVE_BDB]
Component = BerkeleyDB bdb

[bdb]
Component = BerkeleyDB bdb
FILES = src\\db\\bdb\\Makefile.bdb.lib
CONFS = DebugMT DebugDLL ReleaseMT ReleaseDLL

[ctools]
Component=C_ncbi ctools
FILES = src\\ctools\\Makefile.ctools.lib
CONFS = DebugMT DebugDLL ReleaseMT ReleaseDLL

[BDB_LIB]
Component = BerkeleyDB bdb
Value     = bdb

[CONNEXT]
Component= connext
Value    = connext

[XCONNEXT]
Component= connext
Value    = xconnext

[HAVE_BDB_CACHE]
Component = BerkeleyDB

[BDB_CACHE_LIB]
Component = BerkeleyDB
Value     = ncbi_xcache_bdb

[HAVE_BERKELEY_DB]
Component=BerkeleyDB

[HAVE_PYTHON]
Component=PYTHON

[HAVE_SWIG]
Component=SWIG

[HAVE_LIBCONNEXT]
Component=connext

[USE_LOCAL_ZLIB]
Component = LocalZ
[USE_LOCAL_BZLIB]
Component = LocalBZ2
[USE_LOCAL_PCRE]
Component = LocalPCRE
[USE_LOCAL_LMDB]
Component = LocalLMDB

[HAVE_BOOST_TEST]
Component=Boost.Test

[HAVE_BOOST_SPIRIT]
Component=Boost.Spirit

[HAVE_BOOST_THREAD]
Component=Boost.Thread

[BOOST_TEST_UTF_LIBS]
Component=Boost.Test

[HAVE_PUBSEQ_OS]
Component=PubSeqOS, dbapi
[UNLESS_PUBSEQOS]
Component=PubSeqOS, dbapi
Value="#"
[ncbi_xreader_pubseqos]
Component=PubSeqOS, dbapi
Value=ncbi_xreader_pubseqos
[ncbi_xreader_pubseqos2]
Component=PubSeqOS, dbapi
Value=ncbi_xreader_pubseqos2

[dbapi]
Component = dbapi
FILES = src\\dbapi\\driver\\Makefile.dbapi_driver.lib
CONFS = DebugMT DebugDLL ReleaseMT ReleaseDLL

[DBAPI_DRIVER]
Component=dbapi
Value=dbapi_driver

[DBAPI_CTLIB]
Component=Sybase
Value=ncbi_xdbapi_ctlib

[DBAPI_FTDS]
Component=dbapi
Value=ncbi_xdbapi_ftds

[DBAPI_FTDS100]
Component=dbapi
Value=ncbi_xdbapi_ftds100

[DBAPI_FTDS14]
Component=dbapi
Value=ncbi_xdbapi_ftds14

[DBAPI_ODBC]
Component=ODBC
Value=ncbi_xdbapi_odbc

[HAVE_LIBSYBASE]
Component=Sybase

[sqlitewrapp]
Component = SQLITE3 sqlitewrapp
FILES     = src\\db\\sqlite\\Makefile.sqlitewrapp.lib
CONFS     = DebugMT DebugDLL ReleaseMT ReleaseDLL

[SQLITE3_WRAPPER]
Component = SQLITE3 sqlitewrapp
Value     = sqlitewrapp

[ICONV_LIBS]
Component=Iconv

[FTDS100_CTLIB_LIBS]
Component=Iconv, KRB5, GNUTLS
[FTDS100_LIBS]
Component=Iconv, KRB5, GNUTLS

[FTDS14_CTLIB_LIBS]
Component=Iconv, KRB5, GNUTLS
[FTDS14_LIBS]
Component=Iconv, KRB5, GNUTLS

[FTDS_CTLIB_LIBS]
Component=Iconv, KRB5
[FTDS_LIBS]
Component=Iconv, KRB5

[TLS_LIBS]
Component=

[KRB5_LIBS]
Component=KRB5

[UUID_LIBS]
Component=UUID

[NCBI_JNI]
Component = Ncbi-JNI

[ncbi_java]
Component = Ncbi-JNI JDK
Value = ncbi_java

[JDK]
INCLUDE  = $(ThirdParty_JDK)\\include $(ThirdParty_JDK)\\include\\win32
JDK_PATH = $(ThirdParty_JDK)

[gbench]
Component = gbench
FILES = src\\app\\gbench\\gbench\\Makefile.in
CONFS = DebugMT DebugDLL ReleaseMT ReleaseDLL

[NCBI_INT8_GI]
Component = Ncbi-int8-gi

[HAVE_PSG_LOADER]
Component = PSGLoader,LIBUV,NGHTTP2

[PSGLoader]
Component = LIBUV,NGHTTP2

[HAVE_LOCAL_NCBI_BUILD_VER_H]
FILES = compilers\\$(msvc_prj)\\static\\imported_projects_static.sln_configuration_log.txt|compilers\\$(msvc_prj)\\dll\\imported_projects_dll.sln_configuration_log.txt

#============================================================================
# Description of Components (non-toolkit libraries)
# Each description defines
#   available configurations        CONFS
#   additional include directories  INCLUDE
#   additional library directories  LIBPATH
#   preprocessor definitions        DEFINES
#   additional libraries            LIB


#----------------------------------------------------------------------------

[wxWidgets]
INCLUDE = $(ThirdParty_wxWidgets)\\include $(ThirdParty_wxWidgets)\\include\\msvc
LIB     = wxbase.lib wxbase_net.lib wxbase_xml.lib wxmsw_core.lib wxmsw_gl.lib wxmsw_html.lib wxmsw_aui.lib wxmsw_adv.lib wxmsw_richtext.lib wxmsw_propgrid.lib wxmsw_xrc.lib wxexpat.lib wxjpeg.lib wxpng.lib wxregex.lib wxtiff.lib wxzlib.lib
CONFS   = DebugDLL ReleaseDLL
DEFINES = __WXMSW__,NCBI_WXWIN_USE_PCH
[wxWidgets.static.debug.DebugDLL]
LIBPATH = $(ThirdParty_wxWidgets)\\lib_static\\debugdll
[wxWidgets.static.debug.Unicode_DebugDLL]
INCLUDE = $(ThirdParty_wxWidgets)u\\include $(ThirdParty_wxWidgets)u\\include\\msvc
LIBPATH = $(ThirdParty_wxWidgets)u\\lib_static\\debugdll
[wxWidgets.static.release.ReleaseDLL]
LIBPATH = $(ThirdParty_wxWidgets)\\lib_static\\releasedll
[wxWidgets.static.release.Unicode_ReleaseDLL]
INCLUDE = $(ThirdParty_wxWidgets)u\\include $(ThirdParty_wxWidgets)u\\include\\msvc
LIBPATH = $(ThirdParty_wxWidgets)u\\lib_static\\releasedll
[wxWidgets.dll.debug.DebugDLL]
DEFINES = __WXMSW__,NCBI_WXWIN_USE_PCH,WXUSINGDLL=1
LIBPATH = $(ThirdParty_wxWidgets)\\lib_dll\\debugdll
[wxWidgets.dll.debug.Unicode_DebugDLL]
INCLUDE = $(ThirdParty_wxWidgets)u\\include $(ThirdParty_wxWidgets)u\\include\\msvc
DEFINES = __WXMSW__,NCBI_WXWIN_USE_PCH,WXUSINGDLL=1
LIBPATH = $(ThirdParty_wxWidgets)u\\lib_dll\\debugdll
[wxWidgets.dll.release.ReleaseDLL]
DEFINES = __WXMSW__,NCBI_WXWIN_USE_PCH,WXUSINGDLL=1
LIBPATH = $(ThirdParty_wxWidgets)\\lib_dll\\releasedll
[wxWidgets.dll.release.Unicode_ReleaseDLL]
INCLUDE = $(ThirdParty_wxWidgets)u\\include $(ThirdParty_wxWidgets)u\\include\\msvc
DEFINES = __WXMSW__,NCBI_WXWIN_USE_PCH,WXUSINGDLL=1
LIBPATH = $(ThirdParty_wxWidgets)u\\lib_dll\\releasedll

[wxWidgets.xcode]
LIB     = -lwx_osx_cocoa_gl-3.2 -lwx_osx_cocoa_richtext-3.2 -lwx_osx_cocoa_aui-3.2 -lwx_osx_cocoa_propgrid-3.2 -lwx_osx_cocoa_xrc-3.2 -lwx_osx_cocoa_qa-3.2 -lwx_osx_cocoa_html-3.2 -lwx_osx_cocoa_adv-3.2 -lwx_osx_cocoa_core-3.2 -lwx_base_xml-3.2 -lwx_base_net-3.2 -lwx_base-3.2 -framework Cocoa
[wxWidgets.xcode.debug.DebugMT]
INCLUDE = $(ThirdParty_wxWidgets)/Clang-Debug$(sfx64)MT/lib/wx/include/osx_cocoa-ansi-3.2 $(ThirdParty_wxWidgets)/include/wx-3.2
LIBPATH = $(ThirdParty_wxWidgets)/Clang-Debug$(sfx64)MT/lib
[wxWidgets.xcode.debug.DebugDLL]
INCLUDE = $(ThirdParty_wxWidgets)/Clang-Debug$(sfx64)/lib/wx/include/osx_cocoa-ansi-3.2 $(ThirdParty_wxWidgets)/include/wx-3.2
LIBPATH = $(ThirdParty_wxWidgets)/Clang-Debug$(sfx64)/lib
[wxWidgets.xcode.release.ReleaseMT]
INCLUDE = $(ThirdParty_wxWidgets)/Clang-Release$(sfx64)MT/lib/wx/include/osx_cocoa-ansi-3.2 $(ThirdParty_wxWidgets)/include/wx-3.2
LIBPATH = $(ThirdParty_wxWidgets)/Clang-Release$(sfx64)MT/lib
[wxWidgets.xcode.release.ReleaseDLL]
INCLUDE = $(ThirdParty_wxWidgets)/Clang-Release$(sfx64)/lib/wx/include/osx_cocoa-ansi-3.2 $(ThirdParty_wxWidgets)/include/wx-3.2
LIBPATH = $(ThirdParty_wxWidgets)/Clang-Release$(sfx64)/lib

[wxWidgets.xcode.debug]
DEFINES = __WXDEBUG__,__WXMAC__,__WXOSX__,__WXOSX_COCOA__
[wxWidgets.xcode.release]
DEFINES = __WXMAC__,__WXOSX__,__WXOSX_COCOA__,wxDEBUG_LEVEL=0

[WXWIDGETS_LIBS]
Component=wxWidgets, vsCOMCTL32, vsRPCRT4, vsMPR


#----------------------------------------------------------------------------
[PNG]
INCLUDE = $(ThirdParty_PNG)\\include
LIB     = libpng.lib
CONFS   = DebugMT DebugDLL Release ReleaseMT ReleaseDLL
[PNG.debug.DebugMT]
LIBPATH = $(ThirdParty_PNG)\\lib_static\\debugmt
[PNG.debug.DebugDLL]
LIBPATH = $(ThirdParty_PNG)\\lib_static\\debugdll
[PNG.release.ReleaseMT]
LIBPATH = $(ThirdParty_PNG)\\lib_static\\releasemt
[PNG.release.ReleaseDLL]
LIBPATH = $(ThirdParty_PNG)\\lib_static\\releasedll
[PNG.xcode]
INCLUDE = $(ThirdParty_PNG)/include
LIB = -lpng
LIBPATH = $(ThirdParty_PNG)/lib

[HAVE_LIBPNG]
Component=PNG,Z

[PNG_LIBS]
Component=PNG,Z


#----------------------------------------------------------------------------
[GIF]
INCLUDE = $(ThirdParty_GIF)\\include
LIB     = libgif.lib
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL
[GIF.debug.DebugMT]
LIBPATH = $(ThirdParty_GIF)\\lib_static\\debugmt
[GIF.debug.DebugDLL]
LIBPATH = $(ThirdParty_GIF)\\lib_static\\debugdll
[GIF.release.ReleaseMT]
LIBPATH = $(ThirdParty_GIF)\\lib_static\\releasemt
[GIF.release.ReleaseDLL]
LIBPATH = $(ThirdParty_GIF)\\lib_static\\releasedll

[GIF.xcode]
LIB = 

[HAVE_LIBGIF]
Component=GIF

[GIF_LIBS]
Component=GIF


#----------------------------------------------------------------------------
[GLEW]
INCLUDE = $(ThirdParty_GLEW)\\include
LIB     = glew32mx.lib
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL
[GLEW.static.debug.DebugMT]
LIBPATH = $(ThirdParty_GLEW)\\lib_static\\debugmt
DEFINES = GLEW_MX,GLEW_STATIC
[GLEW.static.debug.DebugDLL]
LIBPATH = $(ThirdParty_GLEW)\\lib_static\\debugdll
DEFINES = GLEW_MX,GLEW_STATIC
[GLEW.static.release.ReleaseMT]
LIBPATH = $(ThirdParty_GLEW)\\lib_static\\releasemt
DEFINES = GLEW_MX,GLEW_STATIC
[GLEW.static.release.ReleaseDLL]
LIBPATH = $(ThirdParty_GLEW)\\lib_static\\releasedll
DEFINES = GLEW_MX,GLEW_STATIC
[GLEW.dll.debug.DebugDLL]
LIBPATH = $(ThirdParty_GLEW)\\lib_dll\\debugdll
DEFINES = GLEW_MX
[GLEW.dll.release.ReleaseDLL]
LIBPATH = $(ThirdParty_GLEW)\\lib_dll\\releasedll
DEFINES = GLEW_MX

[GLEW.xcode]
INCLUDE = $(ThirdParty_GLEW)/include
LIB     = -lGLEW
LIBPATH = $(ThirdParty_GLEW)/lib$(sfx64)
DEFINES = GLEW_MX

[HAVE_LIBGLEW]
Component=GLEW

[GLEW_LIBS]
Component=GLEW


#----------------------------------------------------------------------------
[GL2PS_OPT]
Component=GL2PS
Value=GL2PS

[GL2PS]
INCLUDE = $(ThirdParty_GL2PS)\\include
LIB     = gl2ps.lib
CONFS   = DebugDLL ReleaseDLL
[GL2PS.debug.DebugDLL]
LIBPATH = $(ThirdParty_GL2PS)\\lib_static\\debugdll
[GL2PS.release.ReleaseDLL]
LIBPATH = $(ThirdParty_GL2PS)\\lib_static\\releasedll

[GL2PS.xcode]
INCLUDE = $(x86_only)$(ThirdParty_GL2PS)/include
LIB     = -lgl2ps
[GL2PS.xcode.debug]
LIBPATH = $(x86_only)$(ThirdParty_GL2PS)/Debug/lib
[GL2PS.xcode.release]
LIBPATH = $(x86_only)$(ThirdParty_GL2PS)/Release/lib

[HAVE_LIBGL2PS]
Component=GL2PS

[GL2PS_LIBS]
Component=GL2PS


#----------------------------------------------------------------------------
#[GNUTLS]
#INCLUDE = $(ThirdParty_GNUTLS)\\include
#LIB     = libgnutls-30.lib
#CONFS   = DebugDLL ReleaseDLL
#[GNUTLS.debug.DebugDLL]
#LIBPATH = $(ThirdParty_GNUTLS)\\lib_dll\\debugdll
#[GNUTLS.release.ReleaseDLL]
#LIBPATH = $(ThirdParty_GNUTLS)\\lib_dll\\releasedll

#[GNUTLS.xcode]
#Component = Nettle
#INCLUDE = $(ThirdParty_GNUTLS)/include
#LIB     = -lgnutls
#LIBPATH = $(ThirdParty_GNUTLS)/lib$(sfx64)


[Nettle.xcode]
Component = GMP
INCLUDE = $(ThirdParty_Nettle)/include
LIB     = -lnettle -lhogweed
LIBPATH = $(ThirdParty_Nettle)/lib$(sfx64)

[GMP.xcode]
INCLUDE = $(ThirdParty_GMP)/Release$(sfx64)/include
LIB     = -lgmp
LIBPATH = $(ThirdParty_GMP)/lib$(sfx64)

[HAVE_LIBGNUTLS]
Component=GNUTLS

[GNUTLS_LIBS]
Component=GNUTLS


#----------------------------------------------------------------------------
[TIFF]
INCLUDE = $(ThirdParty_TIFF)\\include
LIB     = libtiff.lib
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL
[TIFF.debug.DebugMT]
LIBPATH = $(ThirdParty_TIFF)\\lib_static\\debugmt
[TIFF.debug.DebugDLL]
LIBPATH = $(ThirdParty_TIFF)\\lib_static\\debugdll
[TIFF.release.ReleaseMT]
LIBPATH = $(ThirdParty_TIFF)\\lib_static\\releasemt
[TIFF.release.ReleaseDLL]
LIBPATH = $(ThirdParty_TIFF)\\lib_static\\releasedll

[TIFF.xcode]
INCLUDE = $(x86_only)$(ThirdParty_TIFF)/include
LIB = -ltiff
LIBPATH = $(x86_only)$(ThirdParty_TIFF)/lib$(sfx64)

[HAVE_LIBTIFF]
Component=TIFF,Z

[TIFF_LIBS]
Component=TIFF,Z


#----------------------------------------------------------------------------
[JPEG]
INCLUDE = $(ThirdParty_JPEG)\\include
LIB     = libjpeg.lib
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL
[JPEG.debug.DebugMT]
LIBPATH = $(ThirdParty_JPEG)\\lib_static\\debugmt
[JPEG.debug.DebugDLL]
LIBPATH = $(ThirdParty_JPEG)\\lib_static\\debugdll
[JPEG.release.ReleaseMT]
LIBPATH = $(ThirdParty_JPEG)\\lib_static\\releasemt
[JPEG.release.ReleaseDLL]
LIBPATH = $(ThirdParty_JPEG)\\lib_static\\releasedll

[JPEG.xcode]
INCLUDE = $(x86_only)$(ThirdParty_JPEG)/include
LIB = -ljpeg
LIBPATH = $(x86_only)$(ThirdParty_JPEG)/lib$(sfx64)

[HAVE_LIBJPEG]
Component=JPEG

[JPEG_LIBS]
Component=JPEG


#----------------------------------------------------------------------------
[BZ2]
INCLUDE = $(ThirdParty_BZ2)\\include
LIB     = libbzip2.lib
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL
[BZ2.debug.DebugMT]
LIBPATH = $(ThirdParty_BZ2)\\lib_static\\debugmt
[BZ2.debug.DebugDLL]
LIBPATH = $(ThirdParty_BZ2)\\lib_static\\debugdll
[BZ2.release.ReleaseMT]
LIBPATH = $(ThirdParty_BZ2)\\lib_static\\releasemt
[BZ2.release.ReleaseDLL]
LIBPATH = $(ThirdParty_BZ2)\\lib_static\\releasedll
[BZ2.xcode]
LIB     = -lbz2

#[HAVE_LIBBZ2]
# Defined permanentrly in :
#     include\common\config\ncbiconf_msvc.h
#     src\build-system\cmake\config.cmake.h.in

[BZ2_LIBS]
Component=BZ2


#----------------------------------------------------------------------------
[Z]
INCLUDE = $(ThirdParty_Z)\\include
LIB     = libz.lib
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL
[Z.debug.DebugMT]
LIBPATH = $(ThirdParty_Z)\\lib_static\\debugmt
[Z.debug.DebugDLL]
LIBPATH = $(ThirdParty_Z)\\lib_static\\debugdll
[Z.release.ReleaseMT]
LIBPATH = $(ThirdParty_Z)\\lib_static\\releasemt
[Z.release.ReleaseDLL]
LIBPATH = $(ThirdParty_Z)\\lib_static\\releasedll
[Z.xcode]
LIB     = -lz

#[HAVE_LIBZ]
# Defined permanentrly in :
#     include\common\config\ncbiconf_msvc.h
#     src\build-system\cmake\config.cmake.h.in

[Z_LIBS]
Component=Z


#----------------------------------------------------------------------------
[ZSTANDARD]
INCLUDE = $(ThirdParty_ZSTD)\\include
LIB     = libzstd_static.lib
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL
[ZSTANDARD.debug.DebugMT]
LIBPATH = $(ThirdParty_ZSTD)\\lib_static\\debugmt
[ZSTANDARD.debug.DebugDLL]
LIBPATH = $(ThirdParty_ZSTD)\\lib_static\\debugdll
[ZSTANDARD.release.ReleaseMT]
LIBPATH = $(ThirdParty_ZSTD)\\lib_static\\releasemt
[ZSTANDARD.release.ReleaseDLL]
LIBPATH = $(ThirdParty_ZSTD)\\lib_static\\releasedll
[ZSTANDARD.xcode]
INCLUDE = $(ThirdParty_ZSTD)/include
LIB     = -lzstd
LIBPATH = $(ThirdParty_ZSTD)/lib$(sfx64)

[HAVE_LIBZSTD]
Component=ZSTANDARD

[ZSTD_LIBS]
Component=ZSTANDARD


#----------------------------------------------------------------------------
[LZO]
INCLUDE = $(ThirdParty_LZO)\\include
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL
LIB     = liblzo.lib
[LZO.debug.DebugMT]
LIBPATH = $(ThirdParty_LZO)\\lib_static\\debugmt
[LZO.debug.DebugDLL]
LIBPATH = $(ThirdParty_LZO)\\lib_static\\debugdll
[LZO.release.ReleaseMT]
LIBPATH = $(ThirdParty_LZO)\\lib_static\\releasemt
[LZO.release.ReleaseDLL]
LIBPATH = $(ThirdParty_LZO)\\lib_static\\releasedll

[LZO.xcode]
INCLUDE = $(ThirdParty_LZO)/include
LIB     = -llzo2
LIBPATH = $(ThirdParty_LZO)/lib$(sfx64)

[HAVE_LIBLZO]
Component=LZO

[LZO_LIBS]
Component=LZO


#----------------------------------------------------------------------------
[LMDB]
INCLUDE = $(ThirdParty_LMDB)\\include
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL
LIB     = liblmdb.lib
MACRO   = LMDB_INCLUDE LMDB_STATIC_LIBS LMDB_LIBS
[LMDB.debug.DebugMT]
LIBPATH = $(ThirdParty_LMDB)\\lib_static\\debugmt
[LMDB.debug.DebugDLL]
LIBPATH = $(ThirdParty_LMDB)\\lib_static\\debugdll
[LMDB.release.ReleaseMT]
LIBPATH = $(ThirdParty_LMDB)\\lib_static\\releasemt
[LMDB.release.ReleaseDLL]
LIBPATH = $(ThirdParty_LMDB)\\lib_static\\releasedll

[LMDB.xcode]
INCLUDE = $(ThirdParty_LMDB)/include
LIB     = -llmdb
LIBPATH = $(ThirdParty_LMDB)/lib$(sfx64)
MACRO   = LMDB_INCLUDE LMDB_STATIC_LIBS LMDB_LIBS

[HAVE_LIBLMDB]
Component=LMDB

[LMDB_LIBS]
Component=LMDB


#----------------------------------------------------------------------------
[Mimetic]
INCLUDE = $(ThirdParty_Mimetic)\\include
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL
LIB     = mimetic.lib
[Mimetic.debug.DebugMT]
LIBPATH = $(ThirdParty_Mimetic)\\lib_static\\debugmt
[Mimetic.debug.DebugDLL]
LIBPATH = $(ThirdParty_Mimetic)\\lib_static\\debugdll
[Mimetic.release.ReleaseMT]
LIBPATH = $(ThirdParty_Mimetic)\\lib_static\\releasemt
[Mimetic.release.ReleaseDLL]
LIBPATH = $(ThirdParty_Mimetic)\\lib_static\\releasedll

[Mimetic.xcode]

[HAVE_LIBMIMETIC]
Component=Mimetic

[MIMETIC_LIBS]
Component=Mimetic


#----------------------------------------------------------------------------
[MongoDB]
INCLUDE = $(ThirdParty_MongoDB)\\include
DEFINES = BOOST_AUTO_LINK_NOMANGLE,STATIC_LIBMONGOCLIENT,LIBMONGOCLIENT_NO_AUTOLIB
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL
LIB     = mongoclient.lib boost_thread.lib boost_filesystem.lib boost_system.lib
[MongoDB.debug.DebugMT]
LIBPATH = $(ThirdParty_MongoDB)\\lib_static\\debugmt
[MongoDB.debug.DebugDLL]
LIBPATH = $(ThirdParty_MongoDB)\\lib_static\\debugdll
[MongoDB.release.ReleaseMT]
LIBPATH = $(ThirdParty_MongoDB)\\lib_static\\releasemt
[MongoDB.release.ReleaseDLL]
LIBPATH = $(ThirdParty_MongoDB)\\lib_static\\releasedll

[MongoDB.xcode]

[HAVE_LIBMONGODB]
Component=MongoDB

[MONGODB_LIBS]
Component=MongoDB


#----------------------------------------------------------------------------
# MongoDB 3.x

[MongoDB3]
INCLUDE = $(ThirdParty_MongoDB3)\\include
DEFINES = BOOST_AUTO_LINK_NOMANGLE
CONFS   = DebugDLL ReleaseDLL
LIB     = libmongocxx.lib bson-static-1.0.lib libbsoncxx.lib mongoc-static-1.0.lib
[MongoDB3.debug.DebugDLL]
LIBPATH = $(ThirdParty_MongoDB)\\lib_static\\debugdll
[MongoDB3.release.ReleaseDLL]
LIBPATH = $(ThirdParty_MongoDB)\\lib_static\\releasedll

[MongoDB3.xcode]

[HAVE_LIBMONGODB3]
Component=MongoDB3

[MONGODB3_LIBS]
Component=MongoDB3


#----------------------------------------------------------------------------
[muParser]
INCLUDE = $(ThirdParty_muParser)\\include
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL
LIB     = muparser.lib
[muParser.debug.DebugMT]
LIBPATH = $(ThirdParty_muParser)\\lib_static\\debugmt
[muParser.debug.DebugDLL]
LIBPATH = $(ThirdParty_muParser)\\lib_static\\debugdll
[muParser.release.ReleaseMT]
LIBPATH = $(ThirdParty_muParser)\\lib_static\\releasemt
[muParser.release.ReleaseDLL]
LIBPATH = $(ThirdParty_muParser)\\lib_static\\releasedll

[muParser.xcode]
INCLUDE = $(x86_only)$(ThirdParty_muParser)/include
LIB     = -lmuparser
LIBPATH = $(x86_only)$(ThirdParty_muParser)/lib

[HAVE_LIBMUPARSER]
Component=muParser

[MUPARSER_LIBS]
Component=muParser


#----------------------------------------------------------------------------
[NCBICRYPT]
INCLUDE = $(ThirdParty_ncbicrypt)\\include
LIB     = ncbicrypt.lib
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL
[NCBICRYPT.debug.DebugMT]
LIBPATH = $(ThirdParty_ncbicrypt)\\lib_static\\debugmt
[NCBICRYPT.debug.DebugDLL]
LIBPATH = $(ThirdParty_ncbicrypt)\\lib_static\\debugdll
[NCBICRYPT.release.ReleaseMT]
LIBPATH = $(ThirdParty_ncbicrypt)\\lib_static\\releasemt
[NCBICRYPT.release.ReleaseDLL]
LIBPATH = $(ThirdParty_ncbicrypt)\\lib_static\\releasedll
[NCBICRYPT.xcode]
INCLUDE = $(ThirdParty_ncbicrypt)/include
LIB     = -lncbicrypt
[NCBICRYPT.xcode.debug]
LIBPATH = $(ThirdParty_ncbicrypt)/Debug64/lib
[NCBICRYPT.xcode.release]
LIBPATH = $(ThirdParty_ncbicrypt)/Release64/lib

[HAVE_LIBNCBICRYPT]
Component=NCBICRYPT

[NCBICRYPT_LIBS]
Component=NCBICRYPT


#----------------------------------------------------------------------------
[NGHTTP2]
INCLUDE = $(ThirdParty_NGHTTP2)\\include
DEFINES = 
CONFS   = DebugDLL ReleaseDLL
LIB     = nghttp2.lib
[NGHTTP2.debug.DebugDLL]
LIBPATH = $(ThirdParty_NGHTTP2)\\lib_dll\\debugdll
[NGHTTP2.release.ReleaseDLL]
LIBPATH = $(ThirdParty_NGHTTP2)\\lib_dll\\releasedll

[NGHTTP2.xcode]
INCLUDE = $(ThirdParty_NGHTTP2)/include
LIBPATH = $(ThirdParty_NGHTTP2)/lib
LIB     = -lnghttp2

[HAVE_LIBNGHTTP2]
Component=NGHTTP2

[NGHTTP2_LIBS]
Component=NGHTTP2


#----------------------------------------------------------------------------
# Outdated, switching to PCRE2
[PCRE]
INCLUDE = $(ThirdParty_PCRE)\\include
DEFINES = PCRE_STATIC,NOPOSIX
LIB     = libpcre.lib
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL
[PCRE.debug.DebugMT]
LIBPATH = $(ThirdParty_PCRE)\\lib_static\\debugmt
[PCRE.debug.DebugDLL]
LIBPATH = $(ThirdParty_PCRE)\\lib_static\\debugdll
[PCRE.release.ReleaseMT]
LIBPATH = $(ThirdParty_PCRE)\\lib_static\\releasemt
[PCRE.release.ReleaseDLL]
LIBPATH = $(ThirdParty_PCRE)\\lib_static\\releasedll

[PCRE_LIBS]
# Force to use PCRE2
Component=PCRE2


#----------------------------------------------------------------------------
[PCRE2]
INCLUDE = $(ThirdParty_PCRE2)\\include
DEFINES = PCRE2_STATIC,NOPOSIX
LIB     = pcre2-8-static.lib
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL
[PCRE2.debug.DebugMT]
LIBPATH = $(ThirdParty_PCRE2)\\lib_static\\debugmt
[PCRE2.debug.DebugDLL]
LIBPATH = $(ThirdParty_PCRE2)\\lib_static\\debugdll
[PCRE2.release.ReleaseMT]
LIBPATH = $(ThirdParty_PCRE2)\\lib_static\\releasemt
[PCRE2.release.ReleaseDLL]
LIBPATH = $(ThirdParty_PCRE2)\\lib_static\\releasedll

[PCRE2_LIBS]
Component=PCRE2


#----------------------------------------------------------------------------
[SQLITE3]
INCLUDE = $(ThirdParty_SQLITE3)\\include
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL
LIB     = sqlite3.lib
[SQLITE3.debug.DebugMT]
LIBPATH = $(ThirdParty_SQLITE3)\\lib_static\\debugmt
[SQLITE3.debug.DebugDLL]
LIBPATH = $(ThirdParty_SQLITE3)\\lib_static\\debugdll
[SQLITE3.release.ReleaseMT]
LIBPATH = $(ThirdParty_SQLITE3)\\lib_static\\releasemt
[SQLITE3.release.ReleaseDLL]
LIBPATH = $(ThirdParty_SQLITE3)\\lib_static\\releasedll

[SQLITE3.xcode]
INCLUDE = $(ThirdParty_SQLITE3)/include
LIB     = -lsqlite3
LIBPATH = $(ThirdParty_SQLITE3)/lib$(sfx64)

[SQLITE3_LIBS]
Component=SQLITE3

[HAVE_LIBSQLITE3]
Component=SQLITE3

[HAVE_SQLITE3_UNLOCK_NOTIFY]
Component = SQLITE3
# Not exactly the right check but for simple difference inside-outside NCBI
# it will work.
FILES     = $(ThirdParty_SQLITE3)\\include\\sqlite3async.h

[HAVE_SQLITE3ASYNC_H]
Component = SQLITE3
FILES     = $(ThirdParty_SQLITE3)\\include\\sqlite3async.h


#----------------------------------------------------------------------------
[Sybase]
INCLUDE = $(ThirdParty_Sybase)\\include
LIBPATH =
LIB     = libsybdb.lib libsybct.lib libsybblk.lib libsybcs.lib
;LIB=
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL
[Sybase.debug.DebugMT]
;LIBPATH = $(ThirdParty_Sybase)\\lib_dll\\debugmt
LIBPATH = $(ThirdParty_Sybase)\\lib_dll\\releasemt
[Sybase.debug.DebugDLL]
;LIBPATH = $(ThirdParty_Sybase)\\lib_dll\\debugdll
LIBPATH = $(ThirdParty_Sybase)\\lib_dll\\releasedll
[Sybase.release.ReleaseMT]
LIBPATH = $(ThirdParty_Sybase)\\lib_dll\\releasemt
[Sybase.release.ReleaseDLL]
LIBPATH = $(ThirdParty_Sybase)\\lib_dll\\releasedll


#----------------------------------------------------------------------------
[SybaseDBLIB]
INCLUDE = $(ThirdParty_Sybase)\\include
LIBPATH =
LIB     = libsybdb.lib
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL
[SybaseDBLIB.debug.DebugMT]
;LIBPATH = $(ThirdParty_Sybase)\\lib_dll\\debugmt
LIBPATH = $(ThirdParty_Sybase)\\lib_dll\\releasemt
[SybaseDBLIB.debug.DebugDLL]
;LIBPATH = $(ThirdParty_Sybase)\\lib_dll\\debugdll
LIBPATH = $(ThirdParty_Sybase)\\lib_dll\\releasedll
[SybaseDBLIB.release.ReleaseMT]
LIBPATH = $(ThirdParty_Sybase)\\lib_dll\\releasemt
[SybaseDBLIB.release.ReleaseDLL]
LIBPATH = $(ThirdParty_Sybase)\\lib_dll\\releasedll

[SYBASE_DBLIBS]
Component=SybaseDBLIB


#----------------------------------------------------------------------------
[SybaseCTLIB]
INCLUDE = $(ThirdParty_Sybase)\\include
LIBPATH =
LIB     = libsybct.lib libsybblk.lib libsybcs.lib
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL
[SybaseCTLIB.debug.DebugMT]
;LIBPATH = $(ThirdParty_Sybase)\\lib_dll\\debugmt
LIBPATH = $(ThirdParty_Sybase)\\lib_dll\\releasemt
[SybaseCTLIB.debug.DebugDLL]
;LIBPATH = $(ThirdParty_Sybase)\\lib_dll\\debugdll
LIBPATH = $(ThirdParty_Sybase)\\lib_dll\\releasedll
[SybaseCTLIB.release.ReleaseMT]
LIBPATH = $(ThirdParty_Sybase)\\lib_dll\\releasemt
[SybaseCTLIB.release.ReleaseDLL]
LIBPATH = $(ThirdParty_Sybase)\\lib_dll\\releasedll

[SYBASE_LIBS]
Component=SybaseCTLIB


#----------------------------------------------------------------------------
[ODBC]
LIB     = odbc32.lib odbccp32.lib
# odbcbcp.lib
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL

[SQLServer]
INCLUDE = \"$(ThirdParty_SQLServer)\\Include\"
LIBPATH = $(ThirdParty_SQLServer)\\Lib\\x64
LIB     = msodbcsql18.lib
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL

[ODBC.xcode]
INCLUDE =
LIB     =

[ODBC_LIBS]
Component=ODBC,SQLServer

[HAVE_ODBC]
Component=ODBC,SQLServer

[HAVE_ODBCSS_H]
Component=ODBC,SQLServer


#----------------------------------------------------------------------------
[MSSQL]
INCLUDE = $(ThirdParty_MSSQL)\\include
LIBPATH =
LIB     = NTWDBLIB.LIB
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL
[MSSQL.debug.DebugMT]
LIBPATH = $(ThirdParty_MSSQL)\\lib_dll\\debugmt
[MSSQL.debug.DebugDLL]
LIBPATH = $(ThirdParty_MSSQL)\\lib_dll\\debugdll
[MSSQL.release.ReleaseMT]
LIBPATH = $(ThirdParty_MSSQL)\\lib_dll\\releasemt
[MSSQL.release.ReleaseDLL]
LIBPATH = $(ThirdParty_MSSQL)\\lib_dll\\releasedll


#----------------------------------------------------------------------------
[DBLib]
INCLUDE =
LIBPATH =
LIB     =
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL


#----------------------------------------------------------------------------
[OpenGL]
INCLUDE =
LIBPATH =
LIB     = opengl32.lib glu32.lib
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL

[OpenGL.xcode]
INCLUDE =
LIBPATH =
LIB     = -framework AGL -framework GLKit -framework OpenGL -framework Metal -framework MetalKit -framework QuartzCore

[HAVE_OPENGL]
Component=OpenGL

[OPENGL_LIBS]
Component=OpenGL


#----------------------------------------------------------------------------
[BerkeleyDB]
INCLUDE = $(ThirdParty_BerkeleyDB)\\include
LIB     = libdb.lib
CONFS   = DebugDLL ReleaseDLL
MACRO   = BERKELEYDB_INCLUDE BERKELEYDB_STATIC_LIBS BERKELEYDB_LIBS
[BerkeleyDB.static.debug.DebugDLL]
LIBPATH = $(ThirdParty_BerkeleyDB)\\lib_static\\debugdll
[BerkeleyDB.static.release.ReleaseDLL]
LIBPATH = $(ThirdParty_BerkeleyDB)\\lib_static\\releasedll
[BerkeleyDB.dll.debug.DebugDLL]
LIBPATH = $(ThirdParty_BerkeleyDB)\\lib_dll\\debugdll
[BerkeleyDB.dll.release.ReleaseDLL]
LIBPATH = $(ThirdParty_BerkeleyDB)\\lib_dll\\releasedll

[BerkeleyDB.xcode]
INCLUDE = $(ThirdParty_BerkeleyDB)/include
LIB     = -ldb
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
MACRO   = BERKELEYDB_INCLUDE BERKELEYDB_STATIC_LIBS BERKELEYDB_LIBS
LIBPATH = $(ThirdParty_BerkeleyDB)/lib$(sfx64)


#----------------------------------------------------------------------------
[C_ncbi]
INCLUDE = $(ThirdParty_C_ncbi)\\include
LIBPATH =
LIB     =
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL
DEFINES = USE_BIGINT_IDS=1

[C_ncbi.debug.DebugMT]
LIBPATH = $(ThirdParty_C_ncbi)\\Debug
[C_ncbi.debug.DebugDLL]
LIBPATH = $(ThirdParty_C_ncbi)\\DebugDLL
[C_ncbi.release.ReleaseMT]
LIBPATH = $(ThirdParty_C_ncbi)\\Release
[C_ncbi.release.ReleaseDLL]
LIBPATH = $(ThirdParty_C_ncbi)\\ReleaseDLL


#----------------------------------------------------------------------------
[PYTHON]
INCLUDE = $(PYTHON_PATH)\\include
LIBPATH = $(PYTHON_PATH}\\libs
LIB =
CONFS   = DebugDLL ReleaseDLL


#----------------------------------------------------------------------------
[SWIG]
INCLUDE = $(SWIG_PATH)
LIBPATH = $(SWIG_PATH)
LIB =
CONFS   = DebugDLL ReleaseDLL


#----------------------------------------------------------------------------
[OpenSSL]
INCLUDE = $(ThirdParty_OpenSSL)/include
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL
LIBPATH = $(ThirdParty_OpenSSL)/lib/dll
LIB     = libcrypto.lib libssl.lib
[OpenSSL.debug.DebugMT]
LIBPATH = $(ThirdParty_OpenSSL)\\lib_static\\debugmt
[OpenSSL.static.debug.DebugDLL]
LIBPATH = $(ThirdParty_OpenSSL)\\lib_static\\debugdll
[OpenSSL.release.ReleaseMT]
LIBPATH = $(ThirdParty_OpenSSL)\\lib_static\\releasemt
[OpenSSL.static.release.ReleaseDLL]
LIBPATH = $(ThirdParty_OpenSSL)\\lib_static\\releasedll
[OpenSSL.dll.debug.DebugDLL]
LIBPATH = $(ThirdParty_OpenSSL)\\lib_dll\\debugdll
[OpenSSL.dll.release.ReleaseDLL]
LIBPATH = $(ThirdParty_OpenSSL)\\lib_dll\\releasedll

[HAVE_LIBOPENSSL]
Component=OpenSSL


#----------------------------------------------------------------------------
[Iconv]
LIB     =
[Iconv.xcode]
LIB     = -liconv


#----------------------------------------------------------------------------
[LIBUV]
INCLUDE = $(ThirdParty_UV)\\include
DEFINES = 
LIB     = libuv.lib
Component=LIBUV_ADDLIBS

[LIBUV.debug.DebugMT]
LIBPATH = $(ThirdParty_UV)\\lib_static\\debugmt
[LIBUV.static.debug.DebugDLL]
LIBPATH = $(ThirdParty_UV)\\lib_static\\debugdll
[LIBUV.release.ReleaseMT]
LIBPATH = $(ThirdParty_UV)\\lib_static\\releasemt
[LIBUV.static.release.ReleaseDLL]
LIBPATH = $(ThirdParty_UV)\\lib_static\\releasedll
[LIBUV.dll.debug.DebugDLL]
LIBPATH = $(ThirdParty_UV)\\lib_dll\\debugdll
[LIBUV.dll.release.ReleaseDLL]
LIBPATH = $(ThirdParty_UV)\\lib_dll\\releasedll

[LIBUV.xcode]
INCLUDE = $(ThirdParty_UV)/include
LIBPATH = $(ThirdParty_UV)/lib
LIB     = -luv

[HAVE_LIBUV]
Component=LIBUV

[LIBUV_LIBS]
Component=LIBUV, LIBUV_ADDLIBS

[LIBUV_ADDLIBS]
LIB = psapi.lib Iphlpapi.lib userenv.lib
[LIBUV_ADDLIBS.xcode]
LIB =


#----------------------------------------------------------------------------
[ICU]
INCLUDE = $(ThirdParty_ICU)\\include
LIB     = icudt.lib
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL
[ICU.static.debug.DebugMT]
LIBPATH = $(ThirdParty_ICU)\\lib_static\\debugmt
[ICU.static.debug.DebugDLL]
LIBPATH = $(ThirdParty_ICU)\\lib_static\\debugdll
[ICU.release.ReleaseMT]
LIBPATH = $(ThirdParty_ICU)\\lib_static\\releasemt
[ICU.static.release.ReleaseDLL]
LIBPATH = $(ThirdParty_ICU)\\lib_static\\releasedll
[ICU.dll.debug.DebugDLL]
DEFINES = ICU_DLL
LIBPATH = $(ThirdParty_ICU)\\lib_dll\\debugdll
[ICU.dll.release.ReleaseDLL]
DEFINES = ICU_DLL
LIBPATH = $(ThirdParty_ICU)\\lib_dll\\releasedll

[HAVE_ICU]
Component=ICU


#----------------------------------------------------------------------------
[Xerces]
INCLUDE = $(ThirdParty_Xerces)\\include
LIB     = xerces-c.lib
CONFS   = DebugDLL ReleaseDLL
[Xerces.debug.DebugDLL]
DEFINES = XERCES_DLL
LIBPATH = $(ThirdParty_Xerces)\\lib_dll\\debugdll
[Xerces.release.ReleaseDLL]
DEFINES = XERCES_DLL
LIBPATH = $(ThirdParty_Xerces)\\lib_dll\\releasedll

[HAVE_XERCES]
Component=Xerces

[XERCES_LIBS]
Component=Xerces


#----------------------------------------------------------------------------
[Xalan]
INCLUDE = $(ThirdParty_Xalan)\\include
LIB     = xalan-c.lib XalanMessages.lib
CONFS   = DebugDLL ReleaseDLL
#DEFINES = XALAN_DLL
[Xalan.debug.DebugDLL]
LIBPATH = $(ThirdParty_Xalan)\\lib_dll\\debugdll
[Xalan.release.ReleaseDLL]
LIBPATH = $(ThirdParty_Xalan)\\lib_dll\\releasedll

[HAVE_XALAN]
Component=Xalan

[XALAN_LIBS]
Component=Xalan


#----------------------------------------------------------------------------
[LIBXML]
INCLUDE = $(ThirdParty_XML)\\include
LIB     = libxml2.lib
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL

[LIBXML.static.debug.DebugMT]
DEFINES = LIBXML_STATIC
LIBPATH = $(ThirdParty_XML)\\lib_static\\debugmt
[LIBXML.static.debug.DebugDLL]
DEFINES = LIBXML_STATIC
LIBPATH = $(ThirdParty_XML)\\lib_static\\debugdll
[LIBXML.release.ReleaseMT]
DEFINES = LIBXML_STATIC
LIBPATH = $(ThirdParty_XML)\\lib_static\\releasemt
[LIBXML.static.release.ReleaseDLL]
DEFINES = LIBXML_STATIC
LIBPATH = $(ThirdParty_XML)\\lib_static\\releasedll
[LIBXML.dll.debug.DebugDLL]
LIBPATH = $(ThirdParty_XML)\\lib_dll\\debugdll
[LIBXML.dll.release.ReleaseDLL]
LIBPATH = $(ThirdParty_XML)\\lib_dll\\releasedll

[LIBXML.xcode]
# INCLUDE = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/libxml2
LIB     = -lxml2

[HAVE_LIBXML]
Component=LIBXML

[LIBXML_LIBS]
Component=LIBXML


#----------------------------------------------------------------------------
[LIBXSLT]
INCLUDE = $(ThirdParty_XSLT)\\include
LIB     = libexslt.lib libxslt.lib
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL
[LIBXSLT.debug.DebugMT]
LIBPATH = $(ThirdParty_XSLT)\\lib_static\\debugmt
[LIBXSLT.static.debug.DebugDLL]
LIBPATH = $(ThirdParty_XSLT)\\lib_static\\debugdll
[LIBXSLT.release.ReleaseMT]
LIBPATH = $(ThirdParty_XSLT)\\lib_static\\releasemt
[LIBXSLT.static.release.ReleaseDLL]
LIBPATH = $(ThirdParty_XSLT)\\lib_static\\releasedll
[LIBXSLT.dll.debug.DebugDLL]
LIBPATH = $(ThirdParty_XSLT)\\lib_dll\\debugdll
[LIBXSLT.dll.release.ReleaseDLL]
LIBPATH = $(ThirdParty_XSLT)\\lib_dll\\releasedll

[LIBXSLT.xcode]
LIB     = -lexslt -lxslt

[HAVE_LIBXSLT]
Component=LIBXSLT

[LIBXSLT_LIBS]
Component=LIBXSLT


#----------------------------------------------------------------------------
[LIBEXSLT]
INCLUDE = $(ThirdParty_XSLT)\\include
LIB     = libexslt.lib
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL
[LIBEXSLT.debug.DebugMT]
LIBPATH = $(ThirdParty_XSLT)\\lib_static\\debugmt
[LIBEXSLT.static.debug.DebugDLL]
LIBPATH = $(ThirdParty_XSLT)\\lib_static\\debugdll
[LIBEXSLT.release.ReleaseMT]
LIBPATH = $(ThirdParty_XSLT)\\lib_static\\releasemt
[LIBEXSLT.static.release.ReleaseDLL]
LIBPATH = $(ThirdParty_XSLT)\\lib_static\\releasedll
[LIBEXSLT.dll.debug.DebugDLL]
LIBPATH = $(ThirdParty_XSLT)\\lib_dll\\debugdll
[LIBEXSLT.dll.release.ReleaseDLL]
LIBPATH = $(ThirdParty_XSLT)\\lib_dll\\releasedll

[LIBEXSLT.xcode]
INCLUDE = $(ThirdParty_XSLT)/include
LIB     = -lexslt
LIBPATH = $(ThirdParty_XSLT)/lib$(sfx64)

[HAVE_LIBEXSLT]
Component=LIBXSLT

[LIBEXSLT_LIBS]
Component=LIBEXSLT


#----------------------------------------------------------------------------
[Boost.Test]
INCLUDE = $(ThirdParty_Boost)\\include
LIB     = libboost_unit_test_framework.lib
DEFINES = BOOST_AUTO_LINK_NOMANGLE
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL
[Boost.Test.debug.DebugMT]
LIBPATH = $(ThirdParty_Boost)\\lib_static\\debugmt
[Boost.Test.debug.DebugDLL]
LIBPATH = $(ThirdParty_Boost)\\lib_static\\debugdll
[Boost.Test.release.ReleaseMT]
LIBPATH = $(ThirdParty_Boost)\\lib_static\\releasemt
[Boost.Test.release.ReleaseDLL]
LIBPATH = $(ThirdParty_Boost)\\lib_static\\releasedll

[Boost.Test.xcode]
INCLUDE = $(ThirdParty_Boost)/include
LIB     = -lboost_unit_test_framework-clang-darwin
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
LIBPATH = $(ThirdParty_Boost)/lib


#----------------------------------------------------------------------------
[Boost.Test.Included]
INCLUDE = $(ThirdParty_Boost)\\include
DEFINES = BOOST_TEST_NO_LIB
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL

[Boost.Test.Included.xcode]
INCLUDE = $(ThirdParty_Boost)/include
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL


#----------------------------------------------------------------------------
[Boost.Spirit]
INCLUDE = $(ThirdParty_Boost)\\include
DEFINES = BOOST_AUTO_LINK_NOMANGLE
LIB     = libboost_thread.lib libboost_system.lib
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL
[Boost.Spirit.debug.DebugMT]
LIBPATH = $(ThirdParty_Boost)\\lib_static\\debugmt
[Boost.Spirit.debug.DebugDLL]
LIBPATH = $(ThirdParty_Boost)\\lib_static\\debugdll
[Boost.Spirit.release.ReleaseMT]
LIBPATH = $(ThirdParty_Boost)\\lib_static\\releasemt
[Boost.Spirit.release.ReleaseDLL]
LIBPATH = $(ThirdParty_Boost)\\lib_static\\releasedll

[Boost.Spirit.xcode]
INCLUDE = $(ThirdParty_Boost)/include
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL


#----------------------------------------------------------------------------
[Boost.Thread]
INCLUDE = $(ThirdParty_Boost)\\include
DEFINES = BOOST_AUTO_LINK_NOMANGLE
LIB     = libboost_thread.lib
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL
[Boost.Thread.debug.DebugMT]
LIBPATH = $(ThirdParty_Boost)\\lib_static\\debugmt
[Boost.Thread.debug.DebugDLL]
LIBPATH = $(ThirdParty_Boost)\\lib_static\\debugdll
[Boost.Thread.release.ReleaseMT]
LIBPATH = $(ThirdParty_Boost)\\lib_static\\releasemt
[Boost.Thread.release.ReleaseDLL]
LIBPATH = $(ThirdParty_Boost)\\lib_static\\releasedll

[Boost.Thread.xcode]
INCLUDE = $(ThirdParty_Boost)/include
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL


#----------------------------------------------------------------------------
[fastcgi]
INCLUDE = $(ThirdParty_fastcgi)\\include
LIB     = libfcgi.lib
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL
[fastcgi.debug.DebugMT]
LIBPATH = $(ThirdParty_fastcgi)\\lib_static\\debugmt
[fastcgi.debug.DebugDLL]
LIBPATH = $(ThirdParty_fastcgi)\\lib_static\\debugdll
[fastcgi.release.ReleaseMT]
LIBPATH = $(ThirdParty_fastcgi)\\lib_static\\releasemt
[fastcgi.release.ReleaseDLL]
LIBPATH = $(ThirdParty_fastcgi)\\lib_static\\releasedll

[HAVE_LIBFASTCGI]
Component=fastcgi

[FASTCGI_LIBS]
Component=fastcgi

[HAVE_FCGX_ACCEPT_R]
Component=fastcgi

[FASTCGI_OBJS]
Component=fastcgi
Value=fcgibuf


#----------------------------------------------------------------------------
[FreeType]
INCLUDE = $(ThirdParty_FreeType)\\include
LIB     = freetype.lib
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL
[FreeType.debug.DebugMT]
LIBPATH = $(ThirdParty_FreeType)\\lib_static\\debugmt
[FreeType.debug.DebugDLL]
LIBPATH = $(ThirdParty_FreeType)\\lib_static\\debugdll
[FreeType.release.ReleaseMT]
LIBPATH = $(ThirdParty_FreeType)\\lib_static\\releasemt
[FreeType.release.ReleaseDLL]
LIBPATH = $(ThirdParty_FreeType)\\lib_static\\releasedll

[FREETYPE.xcode]
INCLUDE = $(ThirdParty_FreeType)/include/freetype2 $(ThirdParty_FreeType)/include
LIB     = -lfreetype
LIBPATH = $(ThirdParty_FreeType)/lib

[HAVE_FREETYPE]
Component=FreeType

[FREETYPE_LIBS]
Component=FreeType


#----------------------------------------------------------------------------
[FTGL]
INCLUDE = $(ThirdParty_FTGL)\\include
DEFINES = FTGL_LIBRARY_STATIC
LIB     = ftgl.lib
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL
[FTGL.debug.DebugMT]
LIBPATH = $(ThirdParty_FTGL)\\lib_static\\debugmt
[FTGL.debug.DebugDLL]
LIBPATH = $(ThirdParty_FTGL)\\lib_static\\debugdll
[FTGL.release.ReleaseMT]
LIBPATH = $(ThirdParty_FTGL)\\lib_static\\releasemt
[FTGL.release.ReleaseDLL]
LIBPATH = $(ThirdParty_FTGL)\\lib_static\\releasedll

[FTGL.xcode]
INCLUDE = $(ThirdParty_FTGL)/include
LIB     = -lftgl
[FTGL.xcode.debug]
LIBPATH = $(ThirdParty_FTGL)/Debug$(sfx64)/lib
[FTGL.xcode.release]
LIBPATH = $(ThirdParty_FTGL)/Release$(sfx64)/lib

[HAVE_LIBFTGL]
Component=FTGL

[FTGL_LIBS]
Component=FTGL,FreeType


#----------------------------------------------------------------------------
[INFLUXDB]
INCLUDE = $(ThirdParty_INFLUXDB)\\include
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL
# influxdb-cpp is a header only client, still declare LIBPATH that can be needed defining HAVE_INFLUXDB
LIBPATH = $(ThirdParty_INFLUXDB)\\include

[INFLUXDB.xcode]
INCLUDE = $(x86_only)$(ThirdParty_INFLUXDB)/include

[HAVE_INFLUXDB]
Component=INFLUXDB


#----------------------------------------------------------------------------
# Other
#----------------------------------------------------------------------------

[PubSeqOS]
CONFS = DebugMT DebugDLL ReleaseMT ReleaseDLL
FILES = src\\objtools\\data_loaders\\genbank\\pubseq\\Makefile.in

[internal]
FILES = src\\internal\\Makefile.in

[DefaultLibs]
INCLUDE =
LIBPATH =
LIB     = bcrypt.lib ws2_32.lib dbghelp.lib
[DefaultLibs.xcode]
LIB     = -stdlib=libc++ -framework CoreServices

[vsCOMCTL32]
INCLUDE =
LIBPATH =
LIB     = comctl32.lib
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL
[vsCOMCTL32.xcode]
LIB     =

[vsRPCRT4]
INCLUDE =
LIBPATH =
LIB     = rpcrt4.lib
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL
[vsRPCRT4.xcode]
LIB     =

[vsMPR]
INCLUDE =
LIBPATH =
LIB     = mpr.lib
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL
[vsMPR.xcode]
LIB     =


[WinMain]
FILES = src\\gui\\winmain.cpp

[cgi]
FILES = src/cgi/Makefile.in

[KRB5]
# Only used by FreeTDS, which will load the library dynamically as appropriate.
#LIB     = secur32.lib
LIB     =
[KRB5.xcode]
LIB     = -framework Kerberos

[UUID]
INCLUDE =
LIBPATH =
LIB     = uuid.lib rpcrt4.lib
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL
[UUID.xcode]
LIB     =

#----------------------------------------------------------------------------
[VDB]
#MACRO   = VDB_INCLUDE VDB_LIBS VDB_STATIC_LIBS
INCLUDE = $(ThirdParty_VDB)\\interfaces $(ThirdParty_VDB)\\interfaces\\cc\\vc++\\$(vdb_arch_inc) $(ThirdParty_VDB)\\interfaces\\cc\\vc++ $(ThirdParty_VDB)\\interfaces\\os\\win
LIB     = ncbi-vdb-md.lib
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL
BINPATH = .
[VDB.debug]
# note: use release libraries!
LIBPATH = $(ThirdParty_VDB)\\win\\release\\$(vdb_arch)\\bin
# or debug:
#DEFINES = _DEBUGGING
#LIBPATH = $(ThirdParty_VDB)\\win\\debug\\$(vdb_arch)\\bin
[VDB.release]
LIBPATH = $(ThirdParty_VDB)\\win\\release\\$(vdb_arch)\\bin

[VDB.xcode]
INCLUDE = $(ThirdParty_VDB)/interfaces $(ThirdParty_VDB)/interfaces/cc/gcc/$(vdb_arch) $(ThirdParty_VDB)/interfaces/cc/gcc $(ThirdParty_VDB)/interfaces/os/mac $(ThirdParty_VDB)/interfaces/os/unix
LIB     = -lncbi-vdb
[VDB.xcode.debug]
LIBPATH = $(ThirdParty_VDB)/mac/debug/$(vdb_arch)/lib
[VDB.xcode.release]
LIBPATH = $(ThirdParty_VDB)/mac/release/$(vdb_arch)/lib

[HAVE_NCBI_VDB]
Component=VDB

#[VDB_INCLUDE]
#Component=VDB
#[VDB_LIB]
#Component=VDB
[VDB_LIBS]
Component=VDB,LIBXML,BZ2,Z
[VDB_STATIC_LIBS]
Component=VDB,LIBXML,BZ2,Z
[VDB_REQ]
Component=VDB
Value=VDB
[bamread]
Component=VDB
Value=bamread
[sraread]
Component=VDB
Value=sraread
[ncbi_id2proc_snp]
Component=VDB
Value=ncbi_id2proc_snp
[ncbi_id2proc_wgs]
Component=VDB
Value=ncbi_id2proc_wgs
[ncbi_xloader_bam]
Component=VDB
Value=ncbi_xloader_bam
[ncbi_xloader_csra]
Component=VDB
Value=ncbi_xloader_csra
[ncbi_xloader_snp]
Component=VDB
Value=ncbi_xloader_snp
[ncbi_xloader_sra]
Component=VDB
Value=ncbi_xloader_sra
[ncbi_xloader_vdbgraph]
Component=VDB
Value=ncbi_xloader_vdbgraph
[ncbi_xloader_wgs]
Component=VDB
Value=ncbi_xloader_wgs

# LAPACK (Xcode-only)
[LAPACK_LIBS]
Component = LAPACK
[LAPACK.xcode]
LIB = -llapack

#----------------------------------------------------------------------------
[PROTOBUF_OPT]
Component=PROTOBUF
Value=PROTOBUF
DefValue=MT

[PROTOBUF]
INCLUDE = $(ThirdParty_GRPC)\\include
[PROTOBUF.debug]
LIBPATH = $(ThirdParty_GRPC)\\lib\\DebugDLL
LIB     = libprotobufd.lib
[PROTOBUF.release]
LIBPATH = $(ThirdParty_GRPC)\\lib\\ReleaseDLL
LIB     = libprotobuf.lib
[PROTOBUF.xcode]
INCLUDE = $(ThirdParty_GRPC)/include
[PROTOBUF.xcode.debug]
INCLUDE = $(ThirdParty_GRPC)/Debug/include
LIBPATH = $(ThirdParty_GRPC)/Debug/lib
LIB     = -lprotobufd
[PROTOBUF.xcode.release]
INCLUDE = $(ThirdParty_GRPC)/Release/include
LIBPATH = $(ThirdParty_GRPC)/Release/lib
LIB     = -lprotobuf

[HAVE_LIBPROTOBUF]
Component = PROTOBUF

[PROTOBUF_LIBS]
Component = PROTOBUF

[PROTOBUF_INCLUDE]
Component = PROTOBUF


#----------------------------------------------------------------------------
[GRPC_OPT]
Component=GRPC
Value=GRPC
DefValue=MT

[GRPC]
INCLUDE = $(ThirdParty_GRPC)\\include
DEFINES = _WIN32_WINNT=0x0600
[GRPC.debug]
LIBPATH = $(ThirdParty_GRPC)\\lib\\DebugDLL
LIB     = grpc++.lib grpc.lib gpr.lib address_sorting.lib cares.lib libprotobufd.lib libprotocd.lib upb.lib boringcrypto.lib boringssl.lib re2.lib absl_random_distributions.lib absl_random_seed_sequences.lib absl_random_internal_pool_urbg.lib absl_random_internal_randen.lib absl_random_internal_randen_hwaes.lib absl_random_internal_randen_hwaes_impl.lib absl_random_internal_randen_slow.lib absl_random_internal_platform.lib absl_random_internal_seed_material.lib absl_random_seed_gen_exception.lib absl_log_internal_check_op.lib absl_leak_check.lib absl_die_if_null.lib absl_log_internal_conditions.lib absl_log_internal_message.lib absl_examine_stack.lib absl_log_internal_format.lib absl_log_internal_proto.lib absl_log_internal_nullguard.lib absl_log_internal_log_sink_set.lib absl_log_sink.lib absl_log_entry.lib absl_flags.lib absl_flags_internal.lib absl_flags_marshalling.lib absl_flags_reflection.lib absl_flags_private_handle_accessor.lib absl_flags_commandlineflag.lib absl_flags_commandlineflag_internal.lib absl_flags_config.lib absl_flags_program_name.lib absl_log_initialize.lib absl_log_globals.lib absl_log_internal_globals.lib absl_raw_hash_set.lib absl_hash.lib absl_city.lib absl_low_level_hash.lib absl_hashtablez_sampler.lib absl_statusor.lib absl_status.lib absl_cord.lib absl_cordz_info.lib absl_cord_internal.lib absl_cordz_functions.lib absl_exponential_biased.lib absl_cordz_handle.lib absl_crc_cord_state.lib absl_crc32c.lib absl_crc_internal.lib absl_crc_cpu_detect.lib absl_bad_optional_access.lib absl_str_format_internal.lib absl_strerror.lib absl_synchronization.lib absl_graphcycles_internal.lib absl_kernel_timeout_internal.lib absl_stacktrace.lib absl_symbolize.lib absl_debugging_internal.lib absl_demangle_internal.lib absl_malloc_internal.lib absl_time.lib absl_civil_time.lib absl_time_zone.lib absl_bad_variant_access.lib utf8_validity.lib utf8_range.lib absl_strings.lib absl_string_view.lib absl_strings_internal.lib absl_base.lib absl_spinlock_wait.lib absl_int128.lib absl_throw_delegate.lib absl_raw_logging_internal.lib absl_log_severity.lib
[GRPC.release]
LIBPATH = $(ThirdParty_GRPC)\\lib\\ReleaseDLL
LIB     = grpc++.lib grpc.lib gpr.lib address_sorting.lib cares.lib libprotobuf.lib libprotoc.lib upb.lib boringcrypto.lib boringssl.lib re2.lib absl_random_distributions.lib absl_random_seed_sequences.lib absl_random_internal_pool_urbg.lib absl_random_internal_randen.lib absl_random_internal_randen_hwaes.lib absl_random_internal_randen_hwaes_impl.lib absl_random_internal_randen_slow.lib absl_random_internal_platform.lib absl_random_internal_seed_material.lib absl_random_seed_gen_exception.lib absl_log_internal_check_op.lib absl_leak_check.lib absl_die_if_null.lib absl_log_internal_conditions.lib absl_log_internal_message.lib absl_examine_stack.lib absl_log_internal_format.lib absl_log_internal_proto.lib absl_log_internal_nullguard.lib absl_log_internal_log_sink_set.lib absl_log_sink.lib absl_log_entry.lib absl_flags.lib absl_flags_internal.lib absl_flags_marshalling.lib absl_flags_reflection.lib absl_flags_private_handle_accessor.lib absl_flags_commandlineflag.lib absl_flags_commandlineflag_internal.lib absl_flags_config.lib absl_flags_program_name.lib absl_log_initialize.lib absl_log_globals.lib absl_log_internal_globals.lib absl_raw_hash_set.lib absl_hash.lib absl_city.lib absl_low_level_hash.lib absl_hashtablez_sampler.lib absl_statusor.lib absl_status.lib absl_cord.lib absl_cordz_info.lib absl_cord_internal.lib absl_cordz_functions.lib absl_exponential_biased.lib absl_cordz_handle.lib absl_crc_cord_state.lib absl_crc32c.lib absl_crc_internal.lib absl_crc_cpu_detect.lib absl_bad_optional_access.lib absl_str_format_internal.lib absl_strerror.lib absl_synchronization.lib absl_graphcycles_internal.lib absl_kernel_timeout_internal.lib absl_stacktrace.lib absl_symbolize.lib absl_debugging_internal.lib absl_demangle_internal.lib absl_malloc_internal.lib absl_time.lib absl_civil_time.lib absl_time_zone.lib absl_bad_variant_access.lib utf8_validity.lib utf8_range.lib absl_strings.lib absl_string_view.lib absl_strings_internal.lib absl_base.lib absl_spinlock_wait.lib absl_int128.lib absl_throw_delegate.lib absl_raw_logging_internal.lib absl_log_severity.lib
[GRPC.xcode]
INCLUDE = $(ThirdParty_GRPC)/include
[GRPC.xcode.debug]
INCLUDE = $(ThirdParty_GRPC)/Debug/include
LIBPATH = $(ThirdParty_GRPC)/Debug/lib
LIB     = -lgrpc++ -lgrpc -lgpr -laddress_sorting -lupb -lcares -lprotobufd -labsl_random_distributions -labsl_random_seed_sequences -labsl_random_internal_pool_urbg -labsl_random_internal_randen -labsl_random_internal_randen_hwaes -labsl_random_internal_randen_hwaes_impl -labsl_random_internal_randen_slow -labsl_random_internal_platform -labsl_random_internal_seed_material -labsl_random_seed_gen_exception -lprotobufd -labsl_log_internal_check_op -labsl_leak_check -labsl_die_if_null -labsl_log_internal_conditions -labsl_log_internal_message -labsl_examine_stack -labsl_log_internal_format -labsl_log_internal_proto -labsl_log_internal_nullguard -labsl_log_internal_log_sink_set -labsl_log_sink -labsl_log_entry -labsl_flags -labsl_flags_internal -labsl_flags_marshalling -labsl_flags_reflection -labsl_flags_private_handle_accessor -labsl_flags_commandlineflag -labsl_flags_commandlineflag_internal -labsl_flags_config -labsl_flags_program_name -labsl_log_initialize -labsl_log_globals -labsl_log_internal_globals -labsl_raw_hash_set -labsl_hash -labsl_city -labsl_low_level_hash -labsl_hashtablez_sampler -labsl_statusor -labsl_status -labsl_cord -labsl_cordz_info -labsl_cord_internal -labsl_cordz_functions -labsl_exponential_biased -labsl_cordz_handle -labsl_crc_cord_state -labsl_crc32c -labsl_crc_internal -labsl_crc_cpu_detect -labsl_bad_optional_access -labsl_str_format_internal -labsl_strerror -labsl_synchronization -labsl_graphcycles_internal -labsl_kernel_timeout_internal -labsl_stacktrace -labsl_symbolize -labsl_debugging_internal -labsl_demangle_internal -labsl_malloc_internal -labsl_time -labsl_civil_time -labsl_time_zone -labsl_bad_variant_access -lutf8_validity -lutf8_range -labsl_strings -labsl_string_view -labsl_strings_internal -labsl_base -labsl_spinlock_wait -labsl_int128 -labsl_throw_delegate -labsl_raw_logging_internal -labsl_log_severity -lre2 -lboringssl -lboringcrypto -lz
[GRPC.xcode.release]
INCLUDE = $(ThirdParty_GRPC)/Release/include
LIBPATH = $(ThirdParty_GRPC)/Release/lib
LIB     = -lgrpc++ -lgrpc -lgpr -laddress_sorting -lupb -lcares -lprotobuf -labsl_random_distributions -labsl_random_seed_sequences -labsl_random_internal_pool_urbg -labsl_random_internal_randen -labsl_random_internal_randen_hwaes -labsl_random_internal_randen_hwaes_impl -labsl_random_internal_randen_slow -labsl_random_internal_platform -labsl_random_internal_seed_material -labsl_random_seed_gen_exception -lprotobufd -labsl_log_internal_check_op -labsl_leak_check -labsl_die_if_null -labsl_log_internal_conditions -labsl_log_internal_message -labsl_examine_stack -labsl_log_internal_format -labsl_log_internal_proto -labsl_log_internal_nullguard -labsl_log_internal_log_sink_set -labsl_log_sink -labsl_log_entry -labsl_flags -labsl_flags_internal -labsl_flags_marshalling -labsl_flags_reflection -labsl_flags_private_handle_accessor -labsl_flags_commandlineflag -labsl_flags_commandlineflag_internal -labsl_flags_config -labsl_flags_program_name -labsl_log_initialize -labsl_log_globals -labsl_log_internal_globals -labsl_raw_hash_set -labsl_hash -labsl_city -labsl_low_level_hash -labsl_hashtablez_sampler -labsl_statusor -labsl_status -labsl_cord -labsl_cordz_info -labsl_cord_internal -labsl_cordz_functions -labsl_exponential_biased -labsl_cordz_handle -labsl_crc_cord_state -labsl_crc32c -labsl_crc_internal -labsl_crc_cpu_detect -labsl_bad_optional_access -labsl_str_format_internal -labsl_strerror -labsl_synchronization -labsl_graphcycles_internal -labsl_kernel_timeout_internal -labsl_stacktrace -labsl_symbolize -labsl_debugging_internal -labsl_demangle_internal -labsl_malloc_internal -labsl_time -labsl_civil_time -labsl_time_zone -labsl_bad_variant_access -lutf8_validity -lutf8_range -labsl_strings -labsl_string_view -labsl_strings_internal -labsl_base -labsl_spinlock_wait -labsl_int128 -labsl_throw_delegate -labsl_raw_logging_internal -labsl_log_severity -lre2 -lboringssl -lboringcrypto -lz

[HAVE_LIBGRPC]
Component = PROTOBUF GRPC

[GRPC_LIBS]
Component = PROTOBUF GRPC

[GRPC_INCLUDE]
Component = PROTOBUF GRPC

[in-house-resources]
FILES = \\\\snowman\\win-coremake\\ncbi.ini,\\\\snowman\\win-coremake\\Scripts\\test_data
[in-house-resources.xcode]
FILES = $(XCode_ThirdPartyBasePath)/.ncbirc,/am/ncbiapdata/test_data|$(XCode_ThirdPartyBasePath)/.ncbirc,/Volumes/ncbiapdata/test_data

[full-blastdb]
FILES = \\\\snowman\\win-coremake\\ncbi.ini,\\\\frosty\\blast\\db\\blast
[full-blastdb.xcode]
FILES = $(XCode_ThirdPartyBasePath)/.ncbirc,/am/blast/db/blast

[full-test-data]
FILES = \\\\snowman\\win-coremake\\ncbi.ini,\\\\snowman\\win-coremake\\Scripts\\test_data\\traces04
[full-test-data.xcode]
FILES = $(XCode_ThirdPartyBasePath)/.ncbirc,/am/ncbiapdata/test_data/traces04|$(XCode_ThirdPartyBasePath)/.ncbirc,/Volumes/ncbiapdata/test_data/traces04

[BLAST_THIRD_PARTY_STATIC_LIBS]
Component = LMDB SQLITE3

# ===========================================================================
# Datatool description
# It is used to generate C++ code by ASN.1 or DTD specification

[Datatool]
datatool=datatool
CommandLine = -oex \"\" -pch ncbi_pch.hpp -m \"$(InputPath)\" -oA -oc \"$(InputName)\" -od \"$(InputDir)$(InputName).def\" -odi -ocvs
CommandLine.xcode = -oex \"\" -oA -odi -ocvs


# ===========================================================================
# Default NCBI resource to include into all app and dll projects
# Must be placed into compiler-specific subdir of compilers subdirectory
# (msvc*_prj)

[DefaultResource]
app = ncbi.rc
