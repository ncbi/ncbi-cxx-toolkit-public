if(NCBI_COMPONENT_wxWidgets_DISABLED OR NCBI_COMPONENT_wxWidgets_FOUND)
    return()
endif()

set(_name "wxWidgets")
set(_root "${NCBI_ThirdParty_${_name}}")
get_filename_component(_reporter ${CMAKE_CURRENT_LIST_FILE} NAME)

set(wxWidgets_USE_UNICODE ON)
if(NOT DEFINED wxWidgets_REQUESTED_COMPONENTS)
    set(wxWidgets_REQUESTED_COMPONENTS
        gl richtext aui propgrid xrc html qa adv core xml net
    )
endif()
if (NCBI_PTBCFG_COMPONENT_StaticComponents)
    set(wxWidgets_USE_STATIC       ON)
else()
    set(wxWidgets_USE_STATIC       OFF)
endif()


if(NOT EXISTS "${_root}")
    if(NCBI_TRACE_COMPONENT_${_name} OR NCBI_TRACE_ALLCOMPONENTS)
        message("${_reporter}: root directory (${_root}) not found ")
    endif()
    return()
endif()

set(wxWidgets_ROOT_DIR ${NCBI_ThirdParty_${_name}})
NCBI_get_component_config_locations( _subdirs bin)

if(NCBI_TRACE_COMPONENT_${_name} OR NCBI_TRACE_ALLCOMPONENTS)
    message("${_reporter}: ${_name}: checking ${_root}: ${_subdirs}")
endif()

foreach(_sub IN LISTS _subdirs)
    if("${NCBI_CONFIGURATION_TYPES_COUNT}" EQUAL 1)
        string(REPLACE "$<CONFIG>" "${STD_BUILD_TYPE}" _bindir ${_sub})
    else()
        string(REPLACE "$<CONFIG>" "Release" _bindir ${_sub})
    endif()
    if(EXISTS ${_root}/${_bindir}/wx-config)
        NCBI_define_Xcomponent(NAME GTK2 PACKAGE GTK2)
        NCBI_define_Xcomponent(NAME FONTCONFIG MODULE fontconfig PACKAGE Fontconfig LIB fontconfig)
        set(ENV{WX_CONFIG} ${_root}/${_bindir}/wx-config)
        if(NCBI_TRACE_COMPONENT_${_name} OR NCBI_TRACE_ALLCOMPONENTS)
            message("${_reporter}: find_package(${_name} COMPONENTS ${${_name}_REQUESTED_COMPONENTS})")
        endif()
        find_package(${_name} COMPONENTS ${${_name}_REQUESTED_COMPONENTS}  QUIET)
        if(${_name}_FOUND)
            set(NCBI_COMPONENT_${_name}_FOUND    YES)
            set(NCBI_COMPONENT_${_name}_INCLUDE  ${${_name}_INCLUDE_DIRS} ${NCBI_COMPONENT_GTK2_INCLUDE} ${NCBI_COMPONENT_FONTCONFIG_INCLUDE})
            set(NCBI_COMPONENT_${_name}_LIBS     ${${_name}_LIBRARIES} ${NCBI_COMPONENT_GTK2_LIBS} ${NCBI_COMPONENT_FONTCONFIG_LIBS})
            set(NCBI_COMPONENT_${_name}_DEFINES  ${${_name}_DEFINITIONS} ${NCBI_COMPONENT_GTK2_DEFINES} ${NCBI_COMPONENT_FONTCONFIG_DEFINES})

            set(NCBI_COMPONENT_${_name}_VERSION "${wxWidgets_VERSION_STRING}")
            message(STATUS "Found ${_name}: ${_root} (version ${wxWidgets_VERSION_STRING})")
            if(NCBI_TRACE_COMPONENT_${_name} OR NCBI_TRACE_ALLCOMPONENTS)
                message("${_name}_INCLUDE_DIRS = ${${_name}_INCLUDE_DIRS}")
                message("${_name}_LIBRARIES = ${${_name}_LIBRARIES}")
                message("${_name}_LIBRARY_DIRS = ${${_name}_LIBRARY_DIRS}")
                message("${_name}_DEFINITIONS = ${${_name}_DEFINITIONS}")
                message("${_name}_DEFINITIONS_DEBUG = ${${_name}_DEFINITIONS_DEBUG}")
                message("${_name}_CXX_FLAGS = ${${_name}_CXX_FLAGS}")
                message("${_name}_USE_FILE = ${${_name}_USE_FILE}")

                message("${_name}: include dir = ${NCBI_COMPONENT_${_name}_INCLUDE}")
                message("${_name}: libs = ${NCBI_COMPONENT_${_name}_LIBS}")
                if(NOT "${NCBI_COMPONENT_${_name}_DEFINES}" STREQUAL "")
                    message("${_name}: defines = ${NCBI_COMPONENT_${_name}_DEFINES}")
                endif()
            endif()
            break()
        endif()
    endif()
endforeach()

