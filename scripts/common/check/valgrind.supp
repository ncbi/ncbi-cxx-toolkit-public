# $Id$
#
# Valgrind suppression file (version 3.5.0 -> 3.20.0).
#
################################################################################
#
# This file have suppression rules for 'memcheck' and 'helgrind' modes.
#
# Format of this file is:
# {
#     name_of_suppression
#     tool_name:supp_kind
#     (optional extra info for some suppression types)
#     caller0 name, or /name/of/so/file.so
#     caller1 name, or ditto
#     (optionally: caller2 name)
#     (optionally: caller3 name)
#  }
#
# For Memcheck, the supp_kinds are:
#
#     Param Value1 Value2 Value4 Value8 Value16
#     Free Addr1 Addr2 Addr4 Addr8 Addr16
#     Cond (previously known as Value0)
#
# and the optional extra info is:
#     if Param: name of system call param
#     if Free: name of free-ing fn)
#
################################################################################
#
# NOTE: C++ function names must be mangled.
#       Use --gen-suppressions=all option to generate rules.
#
################################################################################


#===============================================================================
# System/glibc issues

{
   Known LIBC bug (https://bugs.kde.org/show_bug.cgi?id=167483)
   Memcheck:Free
   fun:free
   fun:free_mem
   fun:__libc_freeres
   fun:_vgnU_freeres
   fun:exit
   fun:(below main)
}
{
   libc/ I think this is glibc's ultra optimised getenv doing 2 byte reads
   Memcheck:Addr2
   fun:getenv
}
{
   libc/ I think this is glibc's ultra optimised getenv doing 2 byte reads
   Memcheck:Cond
   fun:getenv
}
{
   STL/locale
   Memcheck:Leak
   fun:__builtin_vec_new
   fun:_Znwj
   fun:_ZNSt6locale7classicEv
}
{
   STL/uncaught_exception
   Memcheck:Leak
   fun:malloc
   fun:__cxa_get_globals
   fun:_ZSt18uncaught_exceptionv
}
{
   libc/dlrelocate
   Memcheck:Cond
   fun:_dl_relocate_object
   fun:*
}
{
   libc/dlopen
   Memcheck:Leak
   fun:malloc
   fun:add_to_global
   fun:dl_open_worker
}
{
   libc/dlopen
   Memcheck:Leak
   fun:calloc
   fun:_dlerror_run
}
{
   libc/dlopen
   Memcheck:Leak
   fun:malloc
   fun:decompose_rpath
   fun:_dl_map_object
}
{
   libc/dlopen
   Memcheck:Leak
   fun:malloc
   fun:_dl_map_object_deps
}
{
   libc/dlopen
   Memcheck:Leak
   fun:calloc
   fun:_dl_new_object
}
{
   libc/dlopen
   Memcheck:Leak
   fun:malloc
   ...
   fun:_dl_map_object
}
{
   libc/dlopen
   Memcheck:Leak
   fun:calloc
   fun:_dl_check_map_versions
}
{
   libc/dlsym
   Memcheck:Leak
   fun:malloc
   ...
   fun:dlsym*
}
{
   iostream/buffer
   Memcheck:Leak
   fun:__builtin_vec_new
   fun:_Znaj
   fun:_ZNSt13basic_filebufIwSt11char_traitsIwEE27_M_allocate_internal_bufferEv
}
{
   iostream/buffer
   Memcheck:Leak
   fun:_Znaj
   fun:_ZNSt13basic_filebufIwSt11char_traitsIwEE27_M_allocate_internal_bufferEv
}
{
   iostream/buffer
   Memcheck:Leak
   fun:__builtin_vec_new
   fun:_Znaj
   fun:_ZNSt13basic_filebufIcSt11char_traitsIcEE27_M_allocate_internal_bufferEv
}
{
   iostream/buffer
   Memcheck:Leak
   fun:_Znaj
   fun:_ZNSt13basic_filebufIcSt11char_traitsIcEE27_M_allocate_internal_bufferEv
}
{
   iostream/sync_with_stdio
   Memcheck:Leak
   fun:_Znam
   fun:_ZNSt13basic_filebufI?St11char_traitsI?EE27_M_allocate_internal_bufferEv*
   fun:_ZN9__gnu_cxx13stdio_filebuf*char_traitsI?EEC1EP8_IO_FILESt13_Ios_Openmodem
   fun:_ZNSt8ios_base15sync_with_stdioEb
}
{
   _dl_open
   Memcheck:Addr4
   ...
   fun:_dl_catch_error
   fun:_dl_open
}
{
   _dl_map_object
   Memcheck:Addr4
   ...
   fun:_dl_map_object
}
{
   OpenMP/malloc
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:gomp_malloc
   fun:gomp_init_num_threads
   fun:initialize_env
   fun:_dl_init
}
{
    GProf/profil_counter
    Memcheck:Cond
    fun:profil_counter
}
{
   libc/localtime_r
   Memcheck:Leak
   fun:malloc
   fun:strdup
   fun:tzset_internal
   fun:__tz_convert
}
{
   libc/getpwuid_r
   Memcheck:Leak
   fun:malloc
   ...
   fun:getpwuid_r*
}


#===============================================================================
# 3rd party issues

{
   BerkeleyDB-4.6.21.1 -- looks like an internal glitch (GCC730-ReleaseMT)
   Memcheck:Param
   pwrite64(buf)
   ...
   fun:__os_io
   fun:__log_write
   fun:__log_fill
   fun:__log_putr.isra.1
   fun:__log_put
}
{
   BerkeleyDB-4.6.21.1 -- looks like an internal glitch (GCC730-ReleaseMT)
   Memcheck:Cond
   fun:__log_putr.isra.1
   fun:__log_put
   ...
   fun:__bamc_put
   fun:__dbc_put
   fun:__db_put
   fun:__db_put_pp
}

#{
#   NCBI VDB ver 2.5.0 -- uninit value created on stack, passed around
#   Memcheck:Param
#   fun:__open_nocancel
#   fun:KSysDirOpenFileRead_v1 (sysdir.c:1838)
#}

{
   GnuTLS/Nettle -- apparent optimization shortcut
   Memcheck:Addr8
   fun:__gmpn_copyi_core2
   fun:__gmpn_powm
   fun:__gmpz_powm
   fun:nettle_rsa_compute_root
   fun:nettle_rsa_pkcs1_sign_tr
   fun:_wrap_nettle_pk_sign
   fun:gnutls_privkey_sign_data
   fun:_gnutls_check_key_cert_match
   fun:gnutls_certificate_set_x509_key
   fun:gnutls_certificate_set_x509_simple_pkcs12_mem
   fun:gnutls_certificate_set_x509_simple_pkcs12_file
}

{
   NCBI VDB ver 2.5.0 -- uninit value created on stack in string_vprintf (printf.c:3374)
   Memcheck:Cond
   ...
   fun:add_aws_nodes
}

{
   NCBI VDB ver 3.0.5 -- lacks https://github.com/Mbed-TLS/mbedtls/pull/6942
   Memcheck:Overlap
   fun:memcpy@@GLIBC_2.14
   fun:mbedtls_mpi_sub_abs
}

{
   NCBI VDB ver 3.0.6 -- lacks https://github.com/Mbed-TLS/mbedtls/pull/6942
   Memcheck:Overlap
   fun:__GI_memcpy
   fun:mbedtls_mpi_sub_abs
}

{
   BerkeleyDB 4.6.21.1 glitch -- uninit value created on stack
   Memcheck:Param
   pwrite64(buf)
   ...
   fun:__os_io
   fun:__log_write
   fun:__log_fill
   fun:__log_putr
   ...
   fun:__log_put
   fun:__txn_regop_log
   fun:__txn_commit
   fun:__txn_commit_pp
}
{
   BerkeleyDB 4.6.21.1 glitch -- uninit value created on stack in __bam_ovput() in bt_put.c:886
   Memcheck:Param
   pwrite64(buf)
   ...
   fun:__os_io
   fun:__log_write
   fun:__log_fill
   fun:__log_putr
   ...
   fun:__log_put
   fun:__db_big_log
   fun:__db_poff
   ...
   fun:__bam_iitem
   fun:__bamc_put
   fun:__dbc_put
   fun:__db_put
   fun:__db_put_pp
}
{
   BerkeleyDB 4.6.21.1 glitch -- uninit value created on stack in __bam_broot() in bt_split.c:519 (Variant 3)
   Memcheck:Param
   pwrite64(buf)
   ...
   fun:__os_io
   fun:__memp_pgwrite
   fun:__memp_bhwrite
   fun:__memp_sync_int
   ...
   fun:__db_sync
   fun:__db_refresh
   fun:__db_close
   fun:__db_close_pp
   fun:_ZN4ncbi12CBDB_RawFile7x_CloseENS0_12EIgnoreErrorE
}
{
   BerkeleyDB 4.6.21.1 glitch -- uninit value created on stack in __bam_broot() in bt_split.c:519 (Variant 2b)
   Memcheck:Param
   pwrite64(buf)
   ...
   fun:__os_io
   fun:__memp_pgwrite
   fun:__memp_bhwrite
   fun:__memp_sync_int
   ...
   fun:__memp_trickle_pp
   fun:_ZN4ncbi8CBDB_Env11MempTrickleEiPi
}
{
   BerkeleyDB 4.6.21.1 glitch -- uninit value created on stack in __bam_broot() in bt_split.c:519 (Variant 2a)
   Memcheck:Param
   pwrite64(buf)
   ...
   fun:__os_io
   fun:__log_write
   fun:__log_flush_int
   fun:__log_flush
   ...
   fun:__memp_sync_int
   ...
   fun:__memp_trickle_pp
   fun:_ZN4ncbi8CBDB_Env11MempTrickleEiPi
}
{
   BerkeleyDB 4.6.21.1 glitch -- uninit value created on stack in __bam_broot() in bt_split.c:519 (Variant 1e)
   Memcheck:Param
   pwrite64(buf)
   ...
   fun:__os_io
   fun:__log_write
   fun:__log_fill
   fun:__log_putr
   ...
   fun:__log_put
   fun:__db_addrem_log
   fun:__db_pitem
   fun:__bam_iitem
   fun:__bamc_put
   fun:__dbc_put
}
{
   BerkeleyDB 4.6.21.1 glitch -- uninit value created on stack in __bam_broot() in bt_split.c:519 (Variant 1d)
   Memcheck:Param
   pwrite64(buf)
   ...
   fun:__os_io
   fun:__log_write
   fun:__log_fill
   fun:__log_putr
   ...
   fun:__log_put
   fun:__bam_repl_log
   fun:__bam_ritem
   fun:__bam_iitem
   fun:__bamc_put
   fun:__dbc_put
   fun:__dbc_put_pp
   fun:_ZN4ncbi12CBDB_RawFile9x_DB_CPutEP5__dbcP8__db_dbtS4_j
}
{
   BerkeleyDB 4.6.21.1 glitch -- uninit value created on stack in __bam_broot() in bt_split.c:519 (Variant 1c)
   Memcheck:Param
   pwrite64(buf)
   ...
   fun:__os_io
   fun:__log_write
   fun:__log_flush_int
   ...
   fun:__log_put
   ...
   fun:__db_put_pp
   fun:_ZN4ncbi12CBDB_RawFile8x_DB_PutEP8__db_dbtS2_j
}
{
   BerkeleyDB 4.6.21.1 glitch -- uninit value created on stack (Variant 1b5)
   Memcheck:Param
   pwrite64(buf)
   ...
   fun:__os_io
   fun:__log_write
   fun:__log_fill
   fun:__log_putr
   ...
   fun:__log_put
   ...
   fun:__bam_split
   fun:__bamc_put
   fun:__dbc_put
   fun:__db_put
   fun:__db_put_pp
   fun:_ZN4ncbi12CBDB_RawFile8x_DB_PutEP8__db_dbtS2_j
}
{
   BerkeleyDB 4.6.21.1 glitch -- uninit value created on stack (Variant 1b4)
   Memcheck:Cond
   fun:__log_putr
   ...
   fun:__log_put
   fun:__bam_split_log
   ...
   fun:__bam_split
   fun:__bamc_put
   fun:__dbc_put
   fun:__db_put
   fun:__db_put_pp
   fun:_ZN4ncbi12CBDB_RawFile8x_DB_PutEP8__db_dbtS2_j
}
{
   BerkeleyDB 4.6.21.1 glitch -- uninit value created on stack (Variant 1b3)
   Memcheck:Cond

   fun:__log_putr
   fun:__log_put
   fun:__db_addrem_log
   ...
   fun:__bamc_put
   fun:__dbc_put
   fun:__db_put
   fun:__db_put_pp
   fun:_ZN4ncbi12CBDB_RawFile8x_DB_PutEP8__db_dbtS2_j
}
{
   BerkeleyDB 4.6.21.1 glitch -- uninit value created on stack (Variant 1b2)
   Memcheck:Cond
   fun:__log_putr
   fun:__log_put
   fun:__db_addrem_log
   fun:__db_pitem
   fun:__bam_iitem
   fun:__bamc_put
   fun:__dbc_put
   fun:__db_put
   fun:__db_put_pp
   fun:_ZN4ncbi12CBDB_RawFile8x_DB_PutEP8__db_dbtS2_j
}
{
   BerkeleyDB 4.6.21.1 glitch -- uninit value created on stack (Variant 1b1)
   Memcheck:Cond
   fun:__log_putr
   fun:__log_put_next
   fun:__log_put
   fun:__db_addrem_log
   fun:__db_pitem
   fun:__bam_ovput
   fun:__bam_iitem
   fun:__bamc_put
   fun:__dbc_put
   fun:__db_put
   fun:__db_put_pp
   fun:_ZN4ncbi12CBDB_RawFile8x_DB_PutEP8__db_dbtS2_j
}
{
   BerkeleyDB 4.6.21.1 glitch -- uninit value created on stack in __bam_broot() in bt_split.c:519 (Variant 1a)
   Memcheck:Cond
   fun:__log_putr
   fun:__log_put_next
   fun:__log_put
   fun:__db_addrem_log
   fun:__db_pitem
   fun:__bam_broot
   fun:__bam_root
   fun:__bam_split
   fun:__bamc_put
   fun:__dbc_put
   fun:__db_put
   fun:__db_put_pp
   fun:_ZN4ncbi12CBDB_RawFile8x_DB_PutEP8__db_dbtS2_j
}
{
   BerkeleyDB 4.6.21.1 glitch -- both alloc and use happen inside the same call
   Memcheck:Param
   pwrite64(buf)
   fun:__pwrite_nocancel
   fun:__os_io
   fun:__memp_pgwrite
   fun:__memp_bhwrite
   fun:__memp_sync_int
   ...
   fun:__db_sync
   fun:__db_refresh
   fun:__db_close
   fun:__fop_subdb_setup
   fun:__db_open
   fun:__db_open_pp
}

{
   Sybase CTLIB 15.7-SP122-64bit (Case 1)
   Memcheck:Addr1
   fun:com_secure_memset
   fun:ct__tds_loginover
   fun:ct_async_exec_stack
   fun:ct_connect
}
{
   Sybase CTLIB 16.0-SP03 init
   Memcheck:Leak
   fun:*alloc
   ...
   fun:sybnet_init
   fun:np_init
   fun:ct_gp_init
   fun:ct_init
}

{
   Sybase CTLIB 16.0-SP03 async_poll
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:sybnet__async_poll
   fun:start_thread
   fun:clone
}
{
   Sybase CTLIB 16.0-SP03 / CTLibContext
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:calloc
   ...
   fun:cs_ctx_alloc
   fun:cs_ctx_global
   fun:_ZN4ncbi12CTLibContextC1Ebi
}

{
   Googles as an apparent LZO2' intentional overread for performance
   Memcheck:Value8
   ...
   fun:find_match
   fun:lzo1x_999_compress_internal
   fun:lzo1x_999_compress_level
   fun:lzo1x_999_compress
}

{
   http://permalink.gmane.org/gmane.comp.encryption.nettle.bugs/886
   Memcheck:Addr8
   fun:memxor3
   fun:gcm_crypt
   fun:nettle_gcm_encrypt
}

{
   CToolkit/COldAsnTypeInfo
   Memcheck:Leak
   fun:?alloc
   fun:s_MemAllocator
   ...
   fun:_ZN4ncbi15COldAsnTypeInfo*
}

{
   boost/sigaltstack
   Memcheck:Param
   sigaltstack(ss)
   fun:sigaltstack
   fun:_ZN5boost6detail14signal_handlerD1Ev
}
{
   boost/test_framework_impl::clear
   Memcheck:Addr4
   fun:_ZN5boost9unit_test14framework_impl5clearEv
   fun:_ZN5boost9unit_test14framework_implD1Ev
   fun:__tcf_3
}
{
   boost/unit_test::ut_detail::global_configuration_impl
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:_Znwm
   fun:_ZN5boost9unit_test9ut_detail25global_configuration_imp*
   ...
   fun:_ZN5boost17execution_monitor*
}

{
   LZO/do_compress
   Memcheck:Cond
   fun:do_compress
   fun:lzo1x_1_compress
}
{
   LZO/do_compress V8
   Memcheck:Value8
   fun:do_compress
   fun:lzo1x_1_compress
}
{
   mbedtls/self-memcpy
   Memcheck:Overlap
   fun:memcpy@@GLIBC_2.14
   fun:mbedtls_mpi_sub_abs_ncbicxx_2_28_0
}
{
   Python
   Memcheck:Leak
   ...
   obj:*/python-*/*
}
{
   Python
   Memcheck:Value8
   ...
   obj:*/python-*/*
}
{
   Python
   Memcheck:Addr4
   ...
   obj:*/python-*/*
}
{
   Python
   Memcheck:Cond
   ...
   obj:*/python-*/*
}

{
   GRPC
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN4grpc8internal22GrpcLibraryInitializerC1Ev
   fun:_Z41__static_initialization_and_destruction_0ii
}
{
   GRPC
   Memcheck:Leak
   fun:_Znwm
   ...
   fun:grpc_init
}
{
   GRPC
   Memcheck:Leak
   fun:_Znwm
   ...
   fun:grp_once_init
}


#===============================================================================
# corelib

{
   corelib/CNcbiApplicationAPI::AppMain() -- check command line for presence special arguments - intended leak
   Memcheck:Leak
   fun:_Znam
   fun:_ZN4ncbi*CNcbiApplicationAPI*AppMain
}
{
    corelib/CStackTrace 
    Memcheck:Leak
    match-leak-kinds: definite
    fun:*alloc
    ...
    fun:_ZN*CStackTrace*
}
{
    corelib/CObject/InitCounter
    Memcheck:Cond
    fun:_ZN4ncbi7CObject11InitCounterEv
}
{
    MemCpy to itself in swap() in CObject  (ICC 10.1)
    Memcheck:Overlap
    fun:memcpy
    fun:_ZSt4swapISt4pairIPvjEEvRT_S4_
    fun:_ZN4ncbi24sx_PopLastNewPtrMultipleEPv
    fun:_ZN4ncbi16sx_PopLastNewPtrEPv
    fun:_ZN4ncbi7CObject11InitCounterEv
}
{
    corelib/Diag/s_CreateDefaultDiagHandler 1
    Memcheck:Leak
    ...
    fun:s_CreateDefaultDiagHandler
    fun:__static_initialization_and_destruction_0
}
{
    corelib/Diag/s_CreateDefaultHandler 2
    Memcheck:Leak
    ...
    fun:_ZN4ncbiL26s_CreateDefaultDiagHandlerEv
}
{
    corelib/Diag/CreateDefaultHandler
    Memcheck:Leak
    ...
    fun:_ZN4ncbi24CreateDefaultDiagHandlerEv
}
{
    corelib/Diag/CDiagContext::SetupDiag
    Memcheck:Leak
    ...
    fun:_ZN4ncbi12CDiagContext9SetupDiagENS_14EAppDiagStreamEPNS_13CNcbiRegistryENS_20EDiagCollectMessagesEPKc
    fun:_ZN4ncbi15InitDiagHandlerEv
}
{  
    corelib/Diag/global-init
    Memcheck:Leak
    fun:_Znwm
    fun:_GLOBAL__sub_I_ncbidiag.cpp
    fun:__libc_csu_init
}
{
   corelib/ncbi::s_GetThreadId() 
   Memcheck:Leak
   fun:_Znwm
   ...
   fun:_ZN4ncbi13s_GetThreadIdEv
}
{
    corelib/SSystemMutex/InitializeDynamic
    Memcheck:Cond
    fun:_ZN4ncbi12SSystemMutex17InitializeDynamicEv
}
{
    corelib/SSystemFastMutex/InitializeDynamic
    Memcheck:Cond
    fun:_ZN4ncbi16SSystemFastMutex17InitializeDynamicEv
}
{
    corelib/CTimeout/operator ==, <
    Memcheck:Cond
    fun:_ZNK4ncbi8CTimeout??ERKS0_
}
{
    corelib/CFileUtil::GetTotalDiskSpace, PANFS, CXX-5713 because DLL is not supposed to be closed
    Memcheck:Leak
    fun:malloc
    ...
    fun:_dl_open
    ...
    fun:*s_GetDiskSpace_PANFS*
    fun:*s_GetFileSystemInfo*
}
{
    corelib/NCBI_THROW
    Memcheck:Leak
    fun:malloc
    fun:__cxa_get_globals
    fun:__cxa_allocate_exception
}
{
    corelib/SetDiagStream
    Memcheck:Leak
    fun:_Znwm
    fun:_ZN4ncbi13SetDiagStreamEPSobPFvPvES1_RK*
}
{
    corelib/CNcbiEnvironment::Set
    Memcheck:Leak
    fun:malloc
    fun:strdup
    fun:_ZN4ncbi16CNcbiEnvironment3SetERK*
}
{
    corelib/ncbi::GetDiagBuffer() 
    Memcheck:Leak
    match-leak-kinds: definite
    fun:_Znwm
    ...
    fun:_ZN4ncbi13GetDiagBufferEv
}
{
   CDllResolver::TryCandidate() -- deliberate leak to avoid automatic unloading DLL from a memory
   Memcheck:Leak
   fun:_Znwm
   ...
   fun:_ZN4ncbi12CDllResolver*TryCandidate*
}

# CSafeStatic<T> should be reviewed and suppressed for each case
{
   corelib/CSafeStatic<ncbi::CTls
   Memcheck:Leak
   fun:_Znwm
   ...
   fun:_ZN4ncbi11CSafeStatic*CTls*GetEv
}
{
   corelib/CSafeStatic<ncbi::CParam
   Memcheck:Leak
   fun:_Znwm
   ...
   fun:_ZN4ncbi11CSafeStatic*CParam*
}
{
   corelib/CSafeStatic<string
   Memcheck:Leak
   fun:_Znwm
   ...
   fun:_ZN4ncbi11CSafeStatic*basic_string*
}
{
   corelib/CSafeStatic<CRandomSupplier
   Memcheck:Leak
   fun:_Znwm
   ...
   fun:_ZN4ncbi11CSafeStatic*CRandomSupplier*
}
{
   corelib/test_ncbireg_mt - intended, not important
   Memcheck:Leak
   fun:malloc
   fun:strdup
   fun:_ZN11CTestRegApp12TestApp_InitEv
}
{
   corelib/CUsedTlsBases::GetUsedTlsBases
   Memcheck:Leak
   fun:_Znwm
   ...
   fun:_ZN4ncbi13CUsedTlsBases15GetUsedTlsBasesEv
}


#===============================================================================
# connect

{
   connect/CORE_SetLOCK(MT_LOCK_cxx2c()) - creates a new CRWLock -- deliberate leak
   Memcheck:Leak
   fun:malloc
   fun:MT_LOCK_Create
   fun:_ZN4ncbi13MT_LOCK_cxx2cEPNS_7CRWLockEb
}
{
   connect/CORE_SetLOG(LOG_cxx2c()) - creates a new LOG -- deliberate leak
   Memcheck:Leak
   fun:malloc
   fun:LOG_Create
   fun:_ZN4ncbi9LOG_cxx2cEv
}


#===============================================================================
# db

{
   db/bdb/ncbi::CBDB_Env::Remove() - uses NCBI_LSAN_DISABLE_GUARD - so ignore
   Memcheck:Leak
   fun:malloc
   ...
   fun:_ZN4ncbi8CBDB_Env6RemoveEv
}


#===============================================================================
# dbapi

{
   dbapi/CTLibContext
   Memcheck:Leak
   fun:*alloc
   fun:comn_create_mutex
   fun:cs__uni_mtx_alloc
   fun:unisem_RegisterCallbacks
   fun:cs__ctx_init
   fun:cs_ctx_alloc
   fun:_ZN4ncbi12CTLibContextC1Ebi
}


#===============================================================================
# objects

{
    CSeqVector/tables
    Memcheck:Leak
    fun:__builtin_vec_new
    fun:_Znaj
    fun:_ZGVZN4ncbi7objects10CSeqVector18sx_GetConvertTableENS0_14CSeq_data_Base8E_ChoiceES3_bE6tables
}
{
    CSeqVector/tables
    Memcheck:Leak
    fun:_Znaj
    fun:_ZGVZN4ncbi7objects10CSeqVector18sx_GetConvertTableENS0_14CSeq_data_Base8E_ChoiceES3_bE6tables
}


#===============================================================================
# serial

{
    serial/TypeInfo
    Memcheck:Leak
    fun:_Znwm
    ...
    fun:*TypeInfo*
}
{
    serial/CEnumDataType::CreateDefault
    Memcheck:Leak
    fun:_Znwm
    fun:_ZNK4ncbi13CEnumDataType13CreateDefaultERKNS_10CDataValueE
    fun:_ZN4ncbi18CDataContainerType15CreateClassInfo*
}
{
    serial/CIntDataType::CreateDefault
    Memcheck:Leak
    fun:_Znwm
    fun:_ZNK4ncbi12CIntDataType13CreateDefaultERKNS_10CDataValueE
    fun:_ZN4ncbi18CDataContainerType15CreateClassInfo*
}
{
    serial/CPointerTypeInfo::ReadPointer
    Memcheck:Leak
    fun:_Znwm
    fun:*
    fun:*
    fun:_ZN4ncbi16CPointerTypeInfo11ReadPointer*
}
{
    serial/member
    Memcheck:Leak
    fun:__builtin_new
    fun:_Znwj
    fun:_ZN4ncbi18CClassTypeInfoBase9AddMemberEPKcPKvRKNS_8CTypeRefE
}
{
    serial/member
    Memcheck:Leak
    fun:_Znwj
    fun:_ZN4ncbi18CClassTypeInfoBase9AddMemberEPKcPKvRKNS_8CTypeRefE
}
{
    serial/classinfo
    Memcheck:Leak
    fun:__builtin_new
    fun:_Znwj
    fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIPN4ncbi18CClassTypeInfoBaseEEE8allocateEjPKv
    fun:_ZNSt8_Rb_treeIPN4ncbi18CClassTypeInfoBaseES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_M_get_nodeEv
}
{
    serial/iteminfo
    Memcheck:Leak
    fun:__builtin_new
    fun:_Znwj
    fun:_ZN9__gnu_cxx13new_allocatorIN4ncbi7AutoPtrINS1_9CItemInfoENS1_7DeleterIS3_EEEEE8allocateEjPKv
    fun:_ZNSt12_Vector_baseIN4ncbi7AutoPtrINS0_9CItemInfoENS0_7DeleterIS2_EEEESaIS5_EE11_M_allocateEj
}
{
    serial/iteminfo
    Memcheck:Leak
    fun:_Znwj
    fun:_ZN9__gnu_cxx13new_allocatorIN4ncbi7AutoPtrINS1_9CItemInfoENS1_7DeleterIS3_EEEEE8allocateEjPKv
}
{
    serial/iteminfo
    Memcheck:Leak
    fun:_Znwj
    fun:_ZNSt6vectorIN4ncbi7AutoPtrINS0_9CItemInfoENS0_7DeleterIS2_EEEESaIS5_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS5_S7_EERKS5_
}
{
    serial/stltype
    Memcheck:Leak
    fun:__builtin_new
    fun:_Znwj
    fun:*
    fun:_ZN4ncbi16CTypeInfoMapData11GetTypeInfoEPKNS_9CTypeInfoEPFPS1_S3_E
}
{
    serial/stltype
    Memcheck:Leak
    fun:_Znwj
    fun:*
    fun:_ZN4ncbi16CTypeInfoMapData11GetTypeInfoEPKNS_9CTypeInfoEPFPS1_S3_E
}
{
    serial/enumvalue
    Memcheck:Leak
    fun:__builtin_new
    fun:_Znwj
    fun:_ZNK4ncbi21CEnumeratedTypeValues11ValueToNameEv
}
{
    serial/enumvalue
    Memcheck:Leak
    fun:_Znwj
    fun:_ZNSt8_Rb_treeIiSt4pairIKiPKSsESt10_Select1stIS4_ESt4lessIiESaIS4_EE9_M_insertEPSt18_Rb_tree_node_baseSC_RKS4_
    fun:_ZNSt8_Rb_treeIiSt4pairIKiPKSsESt10_Select1stIS4_ESt4lessIiESaIS4_EE13insert_uniqueESt17_Rb_tree_iteratorIS4_ERKS4_
    fun:_ZNK4ncbi21CEnumeratedTypeValues11ValueToNameEv
}
{
   serial/CEnumeratedTypeValues::ValueToName() - uses NCBI_LSAN_DISABLE_GUARD - so ignore
   Memcheck:Leak
   fun:_Znwm
   ...
   fun:_ZNK4ncbi21CEnumeratedTypeValues11ValueToName*
}
{
    serial/classinfo
    Memcheck:Leak
    fun:__builtin_new
    fun:_Znwj
    fun:_ZN4ncbi20CClassInfoHelperBase15CreateClassInfoEPKcjPKNS_7CObjectEPFPvPKNS_9CTypeInfoEERKSt9type_infoPFPSD_PKvE
}
{
    serial/classinfo
    Memcheck:Leak
    fun:_Znwj
    fun:_ZN4ncbi20CClassInfoHelperBase15CreateClassInfoEPKcjPKNS_7CObjectEPFPvPKNS_9CTypeInfoEPNS_17CObjectMemoryPoolEERKSt9type_infoPFPSF_PKvE
}
{
    serial/choiceinfo
    Memcheck:Leak
    fun:__builtin_new
    fun:_Znwj
    fun:_ZN4ncbi20CClassInfoHelperBase16CreateChoiceInfoEPKcjPKNS_7CObjectEPFPvPKNS_9CTypeInfoEERKSt9type_infoPFjPKNS_15CChoiceTypeInfoEPKvEPFvSH_S6_jEPFvSH_S6_E
}
{
    serial/choiceinfo
    Memcheck:Leak
    fun:_Znwj
    fun:_ZN4ncbi20CClassInfoHelperBase16CreateChoiceInfoEPKcjPKNS_7CObjectEPFPvPKNS_9CTypeInfoEPNS_17CObjectMemoryPoolEERKSt9type_infoPFjPKNS_15CChoiceTypeInfoEPKvEPFvSJ_S6_jSB_EPFvSJ_S6_E
}
{
    serial/typeinfo
    Memcheck:Leak
    fun:__builtin_new
    fun:_Znwj
    fun:_ZN4ncbi7objects*11GetTypeInfoEv
}
{
    serial/typeinfo
    Memcheck:Leak
    fun:_Znwj
    fun:_ZN4ncbi7objects*11GetTypeInfoEv
}
{
    serial/typeinfo
    Memcheck:Leak
    fun:__builtin_new
    fun:_Znwj
    fun:_ZN4ncbi30CPrimitiveTypeInfoIntFunctionsI?E14CreateTypeInfoEv
}
{
    serial/typeinfo
    Memcheck:Leak
    fun:_Znwj
    fun:_ZN4ncbi30CPrimitiveTypeInfoIntFunctionsI?E14CreateTypeInfoEv
}
{
    serial/enuminfo
    Memcheck:Leak
    fun:__builtin_new
    fun:_Znwj
    fun:_ZN4ncbi24CreateEnumeratedTypeInfoI*21CEnumeratedTypeValuesE
}
{
    serial/enuminfo
    Memcheck:Leak
    fun:_Znwj
    fun:_ZN4ncbi24CreateEnumeratedTypeInfoI*21CEnumeratedTypeValuesE
}
{
    serial/choice
    Memcheck:Leak
    fun:__builtin_new
    fun:_Znwj
    fun:_ZN4ncbi15CChoiceTypeInfo10AddVariantEPKcPKvRKNS_8CTypeRefE
}
{
    serial/choice
    Memcheck:Leak
    fun:_Znwj
    fun:_ZN4ncbi15CChoiceTypeInfo10AddVariantEPKcPKvRKNS_8CTypeRefE
}
{
    serial/std
    Memcheck:Leak
    fun:__builtin_new
    fun:_Znwj
    fun:_ZN4ncbi12CStdTypeInfo*CreateTypeInfo*
}
{
    serial/std
    Memcheck:Leak
    fun:_Znwj
    fun:_ZN4ncbi12CStdTypeInfo*CreateTypeInfo*
}


################################################################################
#
# Helgrind
#
################################################################################


#===============================================================================
# System issues
{
   CRT/throw runtime_error("...")
   Helgrind:Race
   fun:uw_install_context_1
   fun:_Unwind_RaiseException
   fun:__cxa_throw
}
{
   libunwind - trying to get stack on throw - ignore
   Helgrind:Race
   fun:_Unwind_*
}
{
   libunwind - trying to get stack on throw - ignore
   Helgrind:Race
   fun:_Unwind_RaiseException
   fun:__cxa_throw
}
{
   libunwind - trying to get stack on throw - ignore
   Helgrind:Race
   fun:uw_install_context_1
   fun:_Unwind_*
}
{
   std::atomic - ignore all cases - CXX-11270
   Helgrind:Race
   fun:load
   fun:_ZNKSt13__atomic_baseIiEcviEv
}
{
   std::atomic - ignore all cases - CXX-11270
   Helgrind:Race
   fun:store
   fun:_ZNSt13__atomic_baseIbEaSEb
}
{
   std::atomic - ignore all cases - CXX-11270
   Helgrind:Race
   fun:load
   fun:_ZNKSt6atomicIbEcvbEv
}
{
   jaeger tracing - ignore
   Helgrind:Misc
   fun:pthread_cond_signal_WRK
   ...
   fun:_ZN13jaegertracing9reporters14RemoteReporter6reportERKNS_4SpanE
}
{
   jaeger tracing - ignore
   Helgrind:Misc
   fun:pthread_cond_signal_WRK
   ...
   fun:_ZN13jaegertracing9reporters14RemoteReporter5closeEv
}
{
   mutex_destroy - ignore
   Helgrind:Race
   fun:my_memcmp
   fun:mutex_destroy_WRK
   fun:pthread_mutex_destroy
}
{
   Sybase - ignore
   Helgrind:Race
   fun:comn_take_mutex
   fun:rman__thread
}
{
   Sybase - ignore
   Helgrind:Race
   fun:comn_take_mutex
   fun:rmi_exit
}
{
   gethostbyaddr_r - ignore
   Helgrind:Race
   ...
   fun:gethostbyaddr_r*
}



#===============================================================================
# corelib

{
   corelib/SSystemMutex::Lock() - m_Count check - false positive
   Helgrind:Race
   fun:_ZN4ncbi23ncbi_namespace_mutex_mt12SSystemMutex4LockENS0_16SSystemFastMutex14ELockSemanticsE
}
{
   corelib/SSystemMutex::Unlock - m_Count check - false positive
   Helgrind:Race
   fun:_ZN4ncbi23ncbi_namespace_mutex_mt12SSystemMutex6UnlockENS0_16SSystemFastMutex14ELockSemanticsE
} 
{
   corelib/DoThrowTraceAbort() (ncbiexpt.cpp) - static cached value - false positive
   Helgrind:Race
   fun:_ZN4ncbi17DoThrowTraceAbortEv
   fun:_ZNK4ncbi10CException18x_ReportToDebuggerEv
}
{
   corelib/DoThrowTraceAbort() (ncbiexpt.cpp) - false positive
   Helgrind:Race
   fun:load
   fun:_ZNKSt6atomicIbEcvbEv
   fun:_ZN4ncbi17DoThrowTraceAbortEv
   fun:_ZNK4ncbi10CException18x_ReportToDebuggerEv
}
{
   corelib/CAtomicCounter - atomic
   Helgrind:Race
   fun:_ZN4ncbi14CAtomicCounter3SetEm
}
{
   corelib/CAtomicCounter - false positive, atomic counter increment for a safe static - ucko CXX-11303
   Helgrind:Race
   fun:_ZN4ncbi14CAtomicCounter5x_AddEPVmi
   fun:_ZN4ncbi14CAtomicCounter3AddEi
}
{
   corelib/:CPushback_Streambuf - check sm_Indexbefore initialization - harmless
   Helgrind:Race
   fun:_ZN4ncbi19CPushback_StreambufC1ERSiPcmPv
}
{
   corelib/CParam::Get() - false positive
   Helgrind:Race
   ...
   fun:*CParam*GetEv
}
{
   corelib/CSafeStatic<>::GetEv() - grichenk CXX-11270 - harmless
   Helgrind:Race
   fun:_ZN4ncbi11CSafeStaticINS_*CSafeStatic_Callbacks*_EEE3GetEv
}
{
   corelib/CSafeStatic<ncbi::CTls -- CXX-10544
   Helgrind:Race
   fun:_ZN4ncbi11CSafeStaticINS_4CTlsINS_*CStaticTls_Callbacks*GetEv
}
{
   corelib/CSafeStatic<ncbi::CTls -- CXX-10544
   Helgrind:Race
   fun:_ZN4ncbi11CSafeStaticINS_4CTlsI6SValueILi*EEEENS_20CStaticTls_CallbacksIS3_EEE3GetEv
}
{
   corelib/CSafeStatic<ncbi::CTls -- CXX-10544
   Helgrind:Race
   fun:_ZN4ncbi11CSafeStaticINS_4CTlsIiEENS_20CStaticTls_CallbacksIiEEE3GetEv
   fun:_ZN4ncbi10CStaticTlsIiE8SetValueEPiPFvS2_PvES3_NS_8CTlsBase20ENativeThreadCleanupE
}
{
   corelib/CSafeStatic<ncbi::CTls -- CXX-10544
   Helgrind:Race
   fun:_ZN4ncbi11CSafeStaticINS_4CTlsINS_13CUsedTlsBasesEEENS_20CStaticTls_Callbacks*
   fun:_ZN4ncbi19CSafeStaticPtr_Base9x_CleanupEv
}
{
   corelib/CTls -- ThreadCleanup - CXX-10544
   Helgrind:Race
   fun:*
   fun:_ZN4ncbi10CStaticTlsI6SValueILi2EEE8SetValueEPS2_PFvS4_PvES5_NS_8CTlsBase20ENativeThreadCleanupE
}
{
   corelib/CTlsBase::x_SetValue - m_Initialized check - false positive
   Helgrind:Race
   fun:_ZN4ncbi8CTlsBase10x_SetValueEPvPFvS1_S1_ES1_NS0_20ENativeThreadCleanupE
}
{
   corelib/CTlsBase::x_SetValue - m_Initialized check - false positive
   Helgrind:Race
   fun:*
   fun:_ZN4ncbi8CTlsBase10x_SetValueEPvPFvS1_S1_ES1_NS0_20ENativeThreadCleanupE
}
{
   corelib/CTlsBase::x_GetValue - m_Initialized check - false positive
   Helgrind:Race
   ...
   fun:_ZNK4ncbi8CTlsBase10x_GetValueEv
}
{
   corelib/CTlsBase::x_Destroy
   Helgrind:Race
   fun:_ZN4ncbi8CTlsBase9x_DestroyEv
   fun:_ZN4ncbi8CTlsBaseD1Ev
}
{
   corelib/CDiagContextThreadData - thread_local usage - false positive
   Helgrind:Race
   fun:_ZN4ncbi22CDiagContextThreadData13GetThreadDataEv
}
{
   corelib/CDiagContextThreadData - thread_local usage - false positive
   Helgrind:Race
   fun:_ZN4ncbi22CDiagContextThreadDataD1Ev
   fun:_ZN4ncbi12CDiagContext23sx_ThreadDataTlsCleanupEPNS_22CDiagContextThreadDataEPv
}
{
   corelib/CDiagContext - thread_local usage - false positive
   Helgrind:Race
   fun:_ZN4ncbi12CDiagContext23sx_ThreadDataTlsCleanupEPNS_22CDiagContextThreadDataEPv
   fun:_ZN4ncbi8CTlsBase14CleanupTlsDataEPvNS0_12ECleanupModeE
   fun:_ZN4ncbi8CTlsBase23CleanupAndDeleteTlsDataEPvNS0_12ECleanupModeE
}
{
   corelib/CThread - sx_ThreadId - false positive
   Helgrind:Race
   fun:*
   fun:_ZN4ncbi13s_GetThreadIdEv
}
{
   corelib/CSystemInfo::GetVirtualMemoryPageSize() - static cashed value - false positive
   Helgrind:Race
   fun:_ZN4ncbi11CSystemInfo24GetVirtualMemoryPageSizeEv
}
{
   vorelib/CFastLocalTime::GetLocalTime() - access to global _timezone - from CFastLocalTime and other code - harmless - ivanov
   Helgrind:Race
   fun:_ZN4ncbi14CFastLocalTime12GetLocalTimeEv
}
{
   corelib/test/test_tls_object - tls variable - grichenk CXX-11270 - false positive
   Helgrind:Race
   fun:_ZL24sx_GetLastNewPtrMultiplev
   fun:_ZL25sx_PushLastNewPtrMultiplePvm
   fun:sx_PushLastNewPtr*
   fun:_ZN17CTestTlsObjectApp7RunTestEv
}
{
   corelib/test/test_tls_object - tls variable - grichenk CXX-11270 - false positive  
   Helgrind:Race
   fun:_ZN4ncbiL17sx_PushLastNewPtrEPvm
}
{
   corelib/test/test_tls_object - global statics vars, just not important - ignore (whole test) - vasilche CXX-10546 
   Helgrind:Race
   fun:_ZSt3maxImERKT_S2_S2_
   fun:_Z7messagePKcS0_dS0_dm
   fun:_ZN17CTestTlsObjectApp7RunTestEv
}
{
   corelib/test/test_tls_object - global statics vars, just not important - ignore (whole test) - vasilche CXX-10546 
   Helgrind:Race
   fun:_Z7messagePKcS0_dS0_dm
   fun:_ZN17CTestTlsObjectApp7RunTestEv
   fun:_ZN17CTestTlsObjectApp10Thread_RunEi
}
{
   corelib/test/test_ncbithr - atomic variable - CXX-11270 - false positive
   Helgrind:Race
   fun:_ZN*St6atomicI16TTestThreadState*
   fun:_ZN*St6atomicI16TTestThreadStateE*
}
{
   corelib/test/test_ncbimtx - not important - ignore
   Helgrind:Race
   ...
   fun:_ZZN9Semaphore17SemaphorePostRace11test_methodEvENKUliRSt6futureIiEE0_clEiS3_
}
{
   corelib/test/test_ncbimtx - not important - ignore
   Helgrind:Race
   ...
   fun:_ZNSt13__future_base11_Task_stateIZN9Semaphore17SemaphorePostRace11test_methodEvEUlvE_SaIiEFivEED1Ev
}


#===============================================================================
# connect

{
   connect/ncbi::CPipeHandle::Open() - child process termination on error - false positive
   Helgrind:Misc
   fun:_Exit
   fun:_ZN4ncbiL6s_ExitEii
   fun:_ZN4ncbi11CPipeHandle4OpenERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorIS6_SaIS6_EEjS8_PKPKcm
}
{
   connect/s_Create = this is for statistics purposes only. /connect/ncbi_socket.c - lavr CXX-11285
   Helgrind:Race
   ...
   fun:s_Create
   fun:SOCK_CreateInternal
}
{
   connect/s_Create = this is for statistics purposes only. /connect/ncbi_socket.c - lavr CXX-11285
   Helgrind:Race
   ...
   fun:s_Connect
   fun:s_Create
}
#{
#   connect/s_Accept = this is for statistics purposes only. /connect/ncbi_socket.c - lavr CXX-11285
#   Helgrind:Race
#   fun:s_Accept
#   fun:LSOCK_AcceptEx
#}

{
   connect/TRIGGER_Reset - confirmed false-positive - lavr CXX-11285
   Helgrind:Race
   fun:TRIGGER_Reset
   fun:_ZN4ncbi8CTrigger5ResetEv
}
{
   connect/TRIGGER_Set - confirmed false-positive - lavr CXX-11285
   Helgrind:Race
   fun:NCBI_SwapPointers
   fun:TRIGGER_Set
   fun:_ZN4ncbi8CTrigger3SetEv
}
{
   connect/CTestServer::RequestShutdown() - setting the shutdown flag doesn't need to be protected (by vakatov) - lavr CXX-11285
   Helgrind:Race
   fun:_ZN4ncbi11CTestServer17ShutdownRequestedEv
}
{
   connect/CConnIniter::CConnIniter() - pre-check followed by lock-and-check-and-modify. /connect/ncbi_socket.c - lavr CXX-11285
   Helgrind:Race
   ...
   fun:_ZN4ncbi11CConnIniterC1Ev
}
{
   connect/g_NCBI_CoreCheckUnlock() - Debugging aid. For lock check consistency /connect/ncbi_socket.c - lavr CXX-11285
   Helgrind:Race
   fun:g_NCBI_CoreCheckUnlock
}
{
   connect/g_NCBI_CoreCheckUnlock() - Debugging aid. For lock check consistency /connect/ncbi_socket.c - lavr CXX-11285
   Helgrind:Race
   fun:g_NCBI_CoreCheckLock
}
{
   connect/CPoolOfThreads_ForServer::AcceptRequest - false positive -- last CRef release - vasilche CXX-10546
   Helgrind:Race
   ...
   fun:_ZN4ncbi24CPoolOfThreads_ForServer13AcceptRequest*
}
{
   connect/MT_LOCK_DoInternal - confirmet false positive (lavr) - lavr CXX-11285
   Helgrind:Race
   ...
   fun:MT_LOCK_DoInternal
}
{
   CBlockingQueue_ForServer - CQueueItem  - satskiy - CXX-11282 - false positive
   Helgrind:Race
   fun:_ZN4ncbi24CBlockingQueue_ForServer10CQueueItem*
}


#===============================================================================
# dbapi
# 

{
   ftds - ucko CXX-11303 - real, but harmless in this context
   Helgrind:Race
   fun:tds_socket_write
}
{
   ftds - ucko CXX-11303 - real, but harmless in this context
   Helgrind:Race
   fun:tds_socket_read
}
{
   ftds - ucko CXX-11303 - real, but unimportant
   Helgrind:LockOrder
   fun:mutex_trylock_WRK
   fun:pthread_mutex_trylock
   fun:tds_raw_mutex_trylock
}


#===============================================================================
# serial

{
   serial/*::GetTypeInfo() - gouriano CXX-12845 - false positive   
   Helgrind:Race
   ...
   fun:*GetTypeInfo*
}
{
   serial/CTypeInfo - gouriano CXX-12845 - false positive   
   Helgrind:Race
   ...
   fun:*CTypeInfo*
}
{
   serial/CObjectTypeInfo - gouriano CXX-12845 - false positive   
   Helgrind:Race
   ...
   fun:_ZNK4ncbi17CObjectTypeInfo*
}
{
   serial/CItemsInfo::GetItemsByName() - gouriano CXX-12845 - false positive   
   Helgrind:Race
   ...
   fun:*CItemsInfo*GetItemsByName*
}
{
   serial/CItemsInfo::GetItemsByName() - Finds - gouriano CXX-12845 - false positive   
   Helgrind:Race
   ...
   fun:*CItemsInfo*Find*
}


#===============================================================================
# objects


{
   ncbi::objects::CSeq_id_Which_Tree::DropInfo() - This is actually a race, but harmless - grichenk CXX-10546
   Helgrind:Race
   fun:_ZN4ncbi7objects18CSeq_id_Which_Tree8DropInfoEPKNS0_12CSeq_id_InfoE
}
{
   ncbi::objects::s_ResetInstance() - This is actually a race, but harmless - grichenk CXX-10546
   Helgrind:Race
   fun:_ZN4ncbi7objectsL15s_ResetInstanceE*
}
{
   ncbi::objects::CSeq_id_Mapper::GetInstance() - false positive, double-check initialization - vasilche CXX-10546
   Helgrind:Race
   fun:_ZN4ncbi7objects14CSeq_id_Mapper11GetInstanceEv
}

# There's no actual race, the variable is read while executing ~CSeq_id_Mapper when no other threads are using it. CXX-10543
{
   ncbi::objects::CSeq_id_Textseq_Tree::Empty() - false positive - grichenk CXX-10543
   Helgrind:Race
   ...
   fun:_ZN4ncbi7objects14CSeq_id_MapperD1Ev
}


#===============================================================================
# util

# satskyse CXX-11282
# It has already been checked by the original developer long ago,
# see the SVN revision 347572 (false positive) CSyncQueue<...>

{
   util/CSyncQueue<...> - CXX-11282 - false positive
   Helgrind:Race
   fun:_ZNK4ncbi10CSyncQueueIiSt5dequeIiSaIiEE18CMySyncQueueTraitsE15x_GuardedUnlockEv
}
{
   util/CSyncQueue<...> - CXX-11282 - false positive
   Helgrind:Race
   fun:_ZNK4ncbi10CSyncQueueI*x_IsGuardedEv
}
{
   util/CSyncQueue<...> - CXX-11282 - false positive
   Helgrind:Race
   fun:_ZN4ncbi10CSyncQueueI*x_Pop_NonBlockingEv
}
{
   util/CSyncQueue<...> - CXX-11282 - false positive
   Helgrind:Race
   fun:_ZNK4ncbi10CSyncQueueI*GetSizeEv
}
{
   util/CThreadPool_ServiceThread - this is rather timing - satskyse CXX-11282
   Helgrind:Race
   fun:_ZN4ncbi25CThreadPool_ServiceThread*
}
{
   util/CThreadPool_ServiceThread - this is rather timing - satskyse CXX-11282
   Helgrind:Race
   fun:_ZN4ncbi4CRefINS_25CThreadPool_ServiceThreadENS_20CObjectCounterLockerEE5ResetEv
}
{
   util/CThreadPool_ThreadImpl - this is rather timing - satskyse CXX-11282
   Helgrind:Race
   fun:_ZN4ncbi22CThreadPool_ThreadImpl15RequestToFinishEv
}
{
   util/CThreadPool_ThreadImpl - this is rather timing - satskyse CXX-11282
   Helgrind:Race
   fun:_ZN4ncbi22CThreadPool_ThreadImpl4MainEv
   fun:_ZN4ncbi18CThreadPool_Thread4MainEv
}
{
   util/CThreadPool_ThreadImpl - this is rather timing - satskyse CXX-11282
   Helgrind:Race
   fun:_ZN4ncbi16CThreadPool_Impl18ThreadStateChangedEv
   fun:_ZN4ncbi25CThreadPool_ServiceThread4MainEv
}
{
   util/CThreadPool_ThreadImpl - this is rather timing - satskyse CXX-11282   
   Helgrind:Race
   fun:_ZN4ncbi16CThreadPool_Impl10ResumeWorkEv
}
{
   util/CThreadPool_ThreadImpl - this is rather timing - satskyse CXX-11282   
   Helgrind:Race
   fun:_ZN4ncbi16CThreadPool_Impl14RequestSuspendEj
}
{
   util/CThreadPool - CSyncQueue<...> - this is rather timing - satskyse CXX-11282
   Helgrind:Race
   fun:_ZNK4ncbi10CSyncQueueINS_4CRefINS_16CThreadPool_TaskENS_20CObjectCounterLockerEEENS_19CSyncQueue_multisetIS4_NS_23SThreadPool_TaskCompareESaIS4_EEENS_24CSyncQueue_DefaultTraitsEE7GetSizeEv
}
{
   util/CObjectCounterLocker>::Reset() - false positive - ucko CXX-11303
   Helgrind:Race
   fun:_ZN4ncbi4CRefINS_7CThreadENS_20CObjectCounterLockerEE5ResetEv
}

{
   util/connect CThreadPool - CSyncQueue<...> - this is rather timing - satskyse CXX-11282
   Helgrind:Race
   fun:_ZN4ncbi10CSyncQueueINS_4CRefINS_16CThreadPool_TaskENS_20CObjectCounterLockerEEENS_19CSyncQueue_multisetIS4_NS_23SThreadPool_TaskCompareESaIS4_EEENS_24CSyncQueue_DefaultTraitsEE18x_Push_NonBlockingERKS4_
}
{
   util/connect CThreadPool - CSyncQueue<...> - this is rather timing - satskyse CXX-11282
   Helgrind:Race
   fun:_ZN4ncbi16CThreadPool_Task17x_RequestToCancelEv
}
{
   util/connect CThreadPool - CSyncQueue<...> - this is rather timing - satskyse CXX-11282
   Helgrind:Race
   fun:_ZNK4ncbi16CThreadPool_Task9GetStatusEv
}
{
   util/connect CThreadPool - CSyncQueue<...> - this is rather timing - satskyse CXX-11282
   Helgrind:Race
   fun:_ZN4ncbi16CThreadPool_Task11x_SetStatusENS0_7EStatusE
}
{
   util/connect CThreadPool - CSyncQueue<...> - this is rather timing - satskyse CXX-11282
   Helgrind:Race
   ...
   fun:_ZN4ncbi22CThreadPool_ThreadImpl14x_TaskFinishedENS_16CThreadPool_Task7EStatusE
}

# False positives -- the writes in question cannot occur until the worker thread responsible
# for previous reads has finished with them and released its CRef.
{
   util/thread_pool_old - CQueueItem::~CQueueItem() - ucko CXX-11303 - false positive
   Helgrind:Race
   fun:_ZN4ncbi14CBlockingQueueINS_4CRefINS_11CStdRequestENS_20CObjectCounterLockerEEEE10CQueueItemD1Ev
}
{
   util/thread_pool_old - CRef<ncbi::CStdRequest, ncbi::CObjectCounterLocker>::Reset() - ucko CXX-11303 - false positive
   Helgrind:Race
   fun:_ZN4ncbi4CRefINS_11CStdRequestENS_20CObjectCounterLockerEE5ResetEv
}
{
   util/thread_pool_old - CRef<ncbi::CStdRequest, ncbi::CObjectCounterLocker>::Reset() - ucko CXX-11303 - false positive
   Helgrind:Race
   ...
   fun:_ZN4ncbi4CRefINS_11CStdRequestENS_20CObjectCounterLockerEE5ResetEv
}
{
   util/connect CRef<CBlockingQueue<>> - False positive (protected by CRef<>) - ucko CXX-11303
   Helgrind:Race
   ...
   fun:_ZN4ncbi7CObject10DeleteThisEv
   fun:_ZNK4ncbi7CObject19RemoveLastReferenceEm
   fun:_ZNK4ncbi7CObject15RemoveReferenceEv
   fun:_ZNK4ncbi20CObjectCounterLocker6UnlockEPKNS_7CObjectE
   fun:_ZN4ncbi4CRefINS_14CBlockingQueueINS0_INS_11CStdRequestENS_20CObjectCounterLockerEEEE10CQueueItemES3_E5ResetEv
}
{
   std::atomic::load(memory_order) - false positive - grichenk OMDM-27
   Helgrind:Race
   ...
   fun:*atomic*load*memory_order
}
{
   std::atomic::store(memory_order) - false positive - grichenk OMDM-27
   Helgrind:Race
   ...
   fun:*atomic*store*memory_order
}
{
   std::atomic::load by SSystemMutex - false positive - grichenk OMDM-27
   Helgrind:Race
   fun:load
   fun:*ncbi_namespace_mutex_mt12SSystemMutex*
}
{
   std::atomic::store by SSystemMutex - false positive - grichenk OMDM-27
   Helgrind:Race
   fun:store
   fun:*ncbi_namespace_mutex_mt12SSystemMutex*
}
{
   std::atomic::load by atomic_base - false positive - grichenk OMDM-27
   Helgrind:Race
   fun:load
   fun:*__atomic_base*
}
{
   std::atomic::store by atomic_base - false positive - grichenk OMDM-27
   Helgrind:Race
   fun:store
   fun:*__atomic_base*
}
